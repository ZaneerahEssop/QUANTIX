{"ast":null,"code":"import _objectSpread from\"C:/Users/Ammaarah/EventuallyPerfect/QUANTIX/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useCallback,useEffect,useLayoutEffect,useState}from\"react\";import Calendar from\"react-calendar\";import\"react-calendar/dist/Calendar.css\";import{FaUser}from\"react-icons/fa\";import{useNavigate}from\"react-router-dom\";import{supabase}from\"../client\";import ChatUI from\"../components/ChatUI\";import Navbar from\"../components/Navbar\";import chatService from\"../services/chatService\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function VendorDashboard(_ref){let{session}=_ref;const navigate=useNavigate();const[vendorName,setVendorName]=useState(\"Vendor\");const[preview,setPreview]=useState(null);const[showImageModal,setShowImageModal]=useState(false);const[pendingRequests,setPendingRequests]=useState([]);const[acceptedEvents,setAcceptedEvents]=useState([]);const[date,setDate]=useState(new Date());const[isLoading,setIsLoading]=useState(true);// Chat state\nconst[selectedPlanner,setSelectedPlanner]=useState(null);const[chatMessages,setChatMessages]=useState({});const[conversations,setConversations]=useState([]);const[currentConversation,setCurrentConversation]=useState(null);const[unreadCount,setUnreadCount]=useState(0);// Prevent scrolling until page is fully loaded\nuseLayoutEffect(()=>{// Add a class to the body to prevent scrolling via CSS\ndocument.body.classList.add(\"dashboard-loading\");// Lock scroll on mount\ndocument.documentElement.style.overflow=\"hidden\";document.body.style.overflow=\"hidden\";// Scroll to top immediately\nwindow.scrollTo(0,0);// Re-enable scrolling after a longer delay (1000ms)\nconst timer=setTimeout(()=>{document.documentElement.style.overflow=\"auto\";document.body.style.overflow=\"auto\";document.body.classList.remove(\"dashboard-loading\");window.scrollTo(0,0);},1000);// Cleanup\nreturn()=>{clearTimeout(timer);document.documentElement.style.overflow=\"auto\";document.body.style.overflow=\"auto\";document.body.classList.remove(\"dashboard-loading\");};},[]);const API_BASE=process.env.REACT_APP_BASE_URL||\"http://localhost:5000\";useEffect(()=>{if(!(session!==null&&session!==void 0&&session.user)){setIsLoading(false);return;}const userId=session.user.id;// Ensure user role is set\nconst updateUserRole=async()=>{var _user$user_metadata;const{data:{user}}=await supabase.auth.getUser();if(user&&!((_user$user_metadata=user.user_metadata)!==null&&_user$user_metadata!==void 0&&_user$user_metadata.role)){await supabase.auth.updateUser({data:{role:\"vendor\"}});}};const fetchInitialData=async()=>{if(!(session!==null&&session!==void 0&&session.user))return;try{setIsLoading(true);const userId=session.user.id;// Vendor info\nconst{data:vendorData,error:vendorError}=await supabase.from(\"vendors\").select(\"name, profile_picture\").eq(\"vendor_id\",userId).single();if(vendorError||!vendorData){console.error(\"Error fetching vendor data:\",vendorError===null||vendorError===void 0?void 0:vendorError.message);const email=session.user.email||\"\";setVendorName(email.split(\"@\")[0]||\"Vendor\");setPreview(null);}else{setVendorName(vendorData.name);setPreview(vendorData.profile_picture);}console.log(\"Fetching from:\",\"/api/vendor-requests/\".concat(userId));// Fetch vendor requests via API\nconst requestsResponse=await fetch(\"\".concat(API_BASE,\"/api/vendor-requests/\").concat(userId));console.log(\"Response status:\",requestsResponse.status);console.log(\"Response OK:\",requestsResponse.ok);if(!requestsResponse.ok){throw new Error(\"Vendor requests API error! status: \".concat(requestsResponse.status));}const requestsData=await requestsResponse.json();console.log(\"API Requests data:\",requestsData);const pending=[];const accepted=[];const plannerIds=new Set();if(requestsData&&requestsData.length>0){requestsData.forEach(req=>{const eventDetails=req.events?{id:req.events.event_id,eventName:req.events.name,eventDate:req.events.start_time?new Date(req.events.start_time):null,eventTime:req.events.start_time,venue:req.events.venue,plannerId:req.events.planner_id,requestId:req.request_id}:null;if(req.status===\"pending\"&&eventDetails){pending.push(eventDetails);plannerIds.add(req.events.planner_id);}else if(req.status===\"accepted\"&&eventDetails){accepted.push(eventDetails);plannerIds.add(req.events.planner_id);}});}// Fetch planner names using your planner API\nconst plannerPromises=[...plannerIds].map(async plannerId=>{try{const response=await fetch(\"\".concat(API_BASE,\"/api/planners/\").concat(plannerId));if(!response.ok){throw new Error(\"Planner API error for \".concat(plannerId,\": \").concat(response.status));}const plannerData=await response.json();return{id:plannerId,name:plannerData.name||\"Planner\"};}catch(error){console.error(\"Error fetching planner \".concat(plannerId,\":\"),error);return{id:plannerId,name:\"Planner\"};}});const planners=await Promise.all(plannerPromises);const plannerMap=Object.fromEntries(planners.map(p=>[p.id,p.name]));const pendingWithNames=pending.map(req=>_objectSpread(_objectSpread({},req),{},{plannerName:plannerMap[req.plannerId]||\"Planner\"}));const acceptedWithNames=accepted.map(req=>_objectSpread(_objectSpread({},req),{},{plannerName:plannerMap[req.plannerId]||\"Planner\"}));setPendingRequests(pendingWithNames);setAcceptedEvents(acceptedWithNames);}catch(error){console.error(\"Error in initial data fetch:\",error);}finally{setIsLoading(false);}};updateUserRole();const subscription=supabase.channel(\"vendor_requests_changes\").on(\"postgres_changes\",{event:\"*\",schema:\"public\",table:\"vendor_requests\",filter:\"vendor_id=eq.\".concat(userId)},()=>fetchInitialData()).subscribe();fetchInitialData();return()=>{subscription.unsubscribe();};},[session,API_BASE]);// Load conversations for the vendor\nconst loadConversations=useCallback(async()=>{if(!(session!==null&&session!==void 0&&session.user))return;try{const conversations=await chatService.getUserConversations(session.user.id);console.log(\"Loaded conversations:\",conversations);setConversations(conversations);}catch(error){console.error(\"Error loading conversations:\",error);}},[session===null||session===void 0?void 0:session.user]);// Load unread message count\nconst loadUnreadCount=useCallback(async()=>{if(!(session!==null&&session!==void 0&&session.user))return;try{const{unreadCount}=await chatService.getUnreadCount(session.user.id);setUnreadCount(unreadCount);}catch(error){console.error(\"Error loading unread count:\",error);}},[session===null||session===void 0?void 0:session.user]);// Initialize chat service and set up real-time listeners\nuseEffect(()=>{if(session!==null&&session!==void 0&&session.user){// Connect to chat service\nchatService.connect(session.user.id);// Set up real-time listeners\nchatService.onNewMessage(message=>{console.log(\"New message received on vendor side:\",message);console.log(\"Current user ID:\",session.user.id);console.log(\"Message sender ID:\",message.sender_id);console.log(\"Is current user?\",message.sender_id===session.user.id);// Update messages for the conversation\nsetChatMessages(prev=>{var _message$sender;const conversationId=message.conversation_id;console.log(\"Updating messages for conversation:\",conversationId);console.log(\"Previous messages for this conversation:\",prev[conversationId]||[]);const newMessage={id:message.message_id,text:message.message_text,timestamp:message.created_at,isCurrentUser:message.sender_id===session.user.id,sender:((_message$sender=message.sender)===null||_message$sender===void 0?void 0:_message$sender.name)||\"Unknown\",conversationId:message.conversation_id};console.log(\"Adding new message:\",newMessage);return _objectSpread(_objectSpread({},prev),{},{[conversationId]:[...(prev[conversationId]||[]),newMessage]});});});chatService.onMessageError(error=>{console.error(\"Message error:\",error);});chatService.onMessageNotification(notification=>{console.log(\"Message notification:\",notification);setUnreadCount(prev=>prev+1);});// Load conversations and unread count\nloadConversations();loadUnreadCount();}return()=>{chatService.removeAllListeners();};},[session===null||session===void 0?void 0:session.user,loadConversations,loadUnreadCount]);// Handle sending a message\nconst handleSendMessage=async message=>{if(!currentConversation||!(session!==null&&session!==void 0&&session.user))return;try{// Send message via WebSocket for real-time delivery\nchatService.sendMessage(currentConversation.conversation_id,session.user.id,message.text,\"text\");// Also send via API as backup\nawait chatService.sendMessageAPI(currentConversation.conversation_id,session.user.id,message.text,\"text\");// Update local state immediately for better UX\nsetChatMessages(prev=>_objectSpread(_objectSpread({},prev),{},{[currentConversation.conversation_id]:[...(prev[currentConversation.conversation_id]||[]),_objectSpread(_objectSpread({},message),{},{conversationId:currentConversation.conversation_id})]}));}catch(error){console.error(\"Error sending message:\",error);}};// Handle planner selection and load conversation\nconst handleSelectPlanner=async planner=>{if(!(session!==null&&session!==void 0&&session.user))return;console.log(\"Vendor selecting planner:\",planner);setSelectedPlanner(planner);try{let conversation;// If planner has a conversation_id, use that directly\nif(planner.conversationId){console.log(\"Using existing conversation:\",planner.conversationId);conversation={conversation_id:planner.conversationId};setCurrentConversation(conversation);// Join the conversation room for real-time updates\nconsole.log(\"Joining conversation room:\",conversation.conversation_id);chatService.joinConversation(conversation.conversation_id);}else{// Get or create conversation with the planner\nconversation=await chatService.getOrCreateConversation(planner.plannerId||planner.id,// Use plannerId if available, fallback to id\nsession.user.id);console.log(\"Got conversation:\",conversation);setCurrentConversation(conversation);// Join the conversation room for real-time updates\nconsole.log(\"Joining conversation room:\",conversation.conversation_id);chatService.joinConversation(conversation.conversation_id);}// Also join the user's personal room for notifications\nchatService.connect(session.user.id);// Load messages for this conversation\nconst messages=await chatService.getConversationMessages(conversation.conversation_id);// Transform messages to match ChatUI format\nconst formattedMessages=messages.map(msg=>{var _msg$sender;return{id:msg.message_id,text:msg.message_text,timestamp:msg.created_at,isCurrentUser:msg.sender_id===session.user.id,sender:((_msg$sender=msg.sender)===null||_msg$sender===void 0?void 0:_msg$sender.name)||\"Unknown\"};});setChatMessages(prev=>_objectSpread(_objectSpread({},prev),{},{[conversation.conversation_id]:formattedMessages}));// Mark messages as read\nawait chatService.markMessagesAsRead(conversation.conversation_id,session.user.id);}catch(error){console.error(\"Error selecting planner:\",error);}};const handleRequestResponse=async(requestId,status)=>{if(!(session!==null&&session!==void 0&&session.user))return;setIsLoading(true);try{const response=await fetch(\"\".concat(API_BASE,\"/api/vendor-requests/\").concat(requestId),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({status:status})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||\"Failed to update request status\");}alert(\"Request \".concat(status,\" successfully!\"));}catch(error){console.error(\"Error updating request status:\",error);alert(\"Failed to update request status: \".concat(error.message));}finally{setIsLoading(false);}};const formatDate=dateString=>{if(!dateString)return\"Date not specified\";const options={year:\"numeric\",month:\"short\",day:\"numeric\"};return new Date(dateString).toLocaleDateString(undefined,options);};const formatTime=dateTimeString=>{if(!dateTimeString)return\"Time not specified\";try{// If it's a full ISO date string, extract just the time in 24h format\nconst date=new Date(dateTimeString);if(isNaN(date.getTime()))return dateTimeString;// Return original if not a valid date\n// Get hours and minutes, pad with leading zeros\nconst hours=String(date.getHours()).padStart(2,\"0\");const minutes=String(date.getMinutes()).padStart(2,\"0\");// Return in 24-hour format (HH:MM)\nreturn\"\".concat(hours,\":\").concat(minutes);}catch(e){console.error(\"Error formatting time:\",e);return dateTimeString;// Return original if there's an error\n}};const getEventsForDate=date=>{return acceptedEvents.filter(event=>{const eventDate=new Date(event.eventDate);return eventDate.toDateString()===date.toDateString();});};if(isLoading){return/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",height:\"100vh\",backgroundColor:\"#f8f9fa\"},children:/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\",padding:\"2rem\",borderRadius:\"8px\",backgroundColor:\"white\",boxShadow:\"0 2px 8px rgba(0,0,0,0.1)\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:\"40px\",height:\"40px\",margin:\"0 auto 1rem\",border:\"4px solid #FFF0F5\",borderTop:\"4px solid #FFB6C1\",borderRadius:\"50%\",animation:\"spin 1s linear infinite\"}}),/*#__PURE__*/_jsx(\"h3\",{style:{color:\"#FFB6C1\"},children:\"Loading your dashboard...\"})]})});}return/*#__PURE__*/_jsxs(\"div\",{style:{minHeight:\"100vh\",background:\"radial-gradient(circle at 100% 0%, #FFE4C4, #FFB6C1)\",padding:\"100px 0 0 0\",margin:0,display:\"flex\",flexDirection:\"column\"},children:[/*#__PURE__*/_jsx(\"style\",{children:\"\\n        .dashboard-calendar { width: 100%; border: none; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; height: 100%; }\\n        .react-calendar__navigation { display: flex; margin-bottom: 1em; }\\n        .react-calendar__navigation button { color: #ff6b8b; background: none; border: none; font-size: 1rem; font-weight: 600; cursor: pointer; padding: 0.5rem; border-radius: 8px; transition: all 0.2s; }\\n        .react-calendar__navigation button:hover { background-color: #ffebee; }\\n        .react-calendar__navigation button:disabled { background-color: transparent; color: #ccc; }\\n        .react-calendar__month-view__weekdays { text-align: center; text-transform: uppercase; font-weight: 600; color: #ff6b8b; font-size: 0.75rem; margin-bottom: 0.5rem; }\\n        .react-calendar__month-view__weekdays__weekday abbr { text-decoration: none; }\\n        .react-calendar__month-view__weekdays__weekday--weekend abbr { color: #ff6b8b; }\\n        .react-calendar__month-view__days__day--weekend { color: #ff6b8b; }\\n        .react-calendar__tile { max-width: 100%; text-align: center; padding: 0.75em 0.5em; background: none; border: 2px solid transparent; border-radius: 50%; color: #333; font-weight: 500; transition: all 0.2s; }\\n        .react-calendar__tile:enabled:hover, .react-calendar__tile:enabled:focus { background-color: #ffebee; border-color: #ffb6c1; transform: scale(1.1); }\\n        .react-calendar__tile--now { background: #ffebee; border: 2px solid #ffb6c1; color: #ff6b8b; font-weight: 600; }\\n        .react-calendar__tile--now:enabled:hover, .react-calendar__tile--now:enabled:focus { background: #ffd6de; border-color: #ff8fa3; }\\n        .react-calendar__tile--active { background: #ffb6c1 !important; color: white !important; border-color: #ffb6c1 !important; font-weight: 600; }\\n        .react-calendar__tile.has-events { position: relative; }\\n        .react-calendar__tile--active:enabled:hover, .react-calendar__tile--active:enabled:focus { background: #ffc0cb !important; border-color: #ffc0cb !important; }\\n        .react-calendar__month-view__days__day--neighboringMonth { color: #ccc; }\\n        .section-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem; border-bottom: 1px solid rgba(0, 0, 0, 0.1); padding-bottom: 0.5rem; }\\n        .event-card { position: relative; display: flex; flex-direction: column; min-height: auto; width: 100%; padding: 0.75rem; padding-bottom: 0.5rem; background: white; border-radius: 16px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); transition: transform 0.2s, box-shadow 0.2s; }\\n        .event-card:hover { transform: translateY(-5px); box-shadow: 0 4px 12px rgba(0,0,0,0.15); }\\n        .delete-event-btn { background: transparent; border: none; color: #ff4d4f; cursor: pointer; font-size: 16px; width: 24px; height: 24px; display: flex; align-items: center; justify-content: center; border-radius: 50%; transition: all 0.2s; position: absolute; top: 10px; right: 10px; }\\n        .delete-event-btn:hover { background: rgba(255, 77, 79, 0.1); transform: scale(1.1); }\\n        .event-details-icons { display: flex; align-items: center; gap: 4px; color: #555; font-size: 0.8rem; margin: 1px 0; }\\n        .view-details-btn { \\n          padding: 4px 10px; \\n          background-color: #FFC0CB; \\n          color: white; \\n          border: none; \\n          border-radius: 4px; \\n          cursor: pointer; \\n          font-size: 0.8rem; \\n          display: flex; \\n          align-items: center; \\n          gap: 4px; \\n          transition: all 0.2s; \\n          margin-left: auto;\\n          position: absolute;\\n          top: 30px;\\n          right: 10px;\\n        }\\n        \\n        /* Hide scrollbar by default */\\n        .custom-scrollbar {\\n          overflow-y: hidden;\\n          transition: overflow-y 0.2s ease-in-out;\\n        }\\n        \\n        /* Show scrollbar on hover */\\n        .custom-scrollbar:hover {\\n          overflow-y: auto;\\n        }\\n        \\n        /* Custom scrollbar styling */\\n        .custom-scrollbar::-webkit-scrollbar {\\n          width: 6px;\\n        }\\n        \\n        .custom-scrollbar::-webkit-scrollbar-track {\\n          background: #f1f1f1;\\n          border-radius: 10px;\\n          margin: 4px 0;\\n        }\\n        \\n        .custom-scrollbar::-webkit-scrollbar-thumb {\\n          background: #ccc;\\n          border-radius: 10px;\\n        }\\n        \\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover {\\n          background: #aaa;\\n        }\\n        .view-details-btn:hover { \\n          background-color: #ffa7b8;\\n          transform: translateY(-1px);\\n        }\\n        .pending-requests-card { background: #f8f9fa; border-radius: 12px; padding: 1.5rem; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); }\\n        .pending-list { list-style: none; padding: 0; margin: 0; }\\n        .pending-list li { background: #FFF0F5; border-radius: 8px; padding: 0.75rem 1rem; margin-bottom: 0.5rem; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1); border: 1px solid #FFD1DC; }\\n        .request-item { display: flex; justify-content: space-between; align-items: center; gap: 1rem; }\\n        .request-details { flex: 1; }\\n        .request-actions { display: flex; gap: 0.5rem; }\\n        .accept-btn, .reject-btn { padding: 0.5rem 1rem; border: none; border-radius: 6px; font-weight: 500; cursor: pointer; transition: all 0.2s; }\\n        .accept-btn { background-color: #4caf50; color: white; }\\n        .accept-btn:hover { background-color: #45a049; transform: translateY(-1px); box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); }\\n        .reject-btn { background-color: #f44336; color: white; }\\n        .reject-btn:hover { background-color: #e53935; transform: translateY(-1px); box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); }\\n      \"}),/*#__PURE__*/_jsx(Navbar,{session:session}),/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:\"white\",flex:\"1\",maxWidth:\"1200px\",margin:\"0 auto\",borderRadius:\"30px\",padding:\"2rem\",boxShadow:\"0 5px 20px rgba(0,0,0,0.1)\"},children:/*#__PURE__*/_jsxs(\"div\",{className:\"vendor-dashboard-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"dashboard-main\",children:/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"2rem\",display:\"flex\",alignItems:\"center\",gap:\"1.5rem\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:\"80px\",height:\"80px\",borderRadius:\"50%\",backgroundColor:preview?\"transparent\":\"#FFDAB9\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\",overflow:\"hidden\",border:\"3px solid white\",boxShadow:\"0 2px 8px rgba(0,0,0,0.1)\",cursor:\"pointer\",transition:\"transform 0.2s\"},onClick:()=>preview&&setShowImageModal(true),onMouseOver:e=>e.currentTarget.style.transform=\"scale(1.05)\",onMouseOut:e=>e.currentTarget.style.transform=\"scale(1)\",children:preview?/*#__PURE__*/_jsx(\"img\",{src:preview,alt:\"Profile\",style:{width:\"100%\",height:\"100%\",objectFit:\"cover\"}}):/*#__PURE__*/_jsx(\"div\",{style:{width:\"100%\",height:\"100%\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\",backgroundColor:\"#FFDAB9\"},children:/*#__PURE__*/_jsx(FaUser,{style:{fontSize:\"2.5rem\",color:\"#FFFFFF\",filter:\"drop-shadow(0 1px 2px rgba(0,0,0,0.1))\",width:\"100%\",height:\"100%\",padding:\"0.5rem\"}})})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{style:{fontSize:\"2rem\",color:\"#333\",margin:\"0 0 0.5rem 0\"},children:[\"Welcome back, \",vendorName,\"!\"]}),/*#__PURE__*/_jsx(\"p\",{style:{color:\"#666\",margin:0,fontSize:\"1rem\"},children:\"Here's what's happening with your upcoming events and requests.\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"1fr 1fr\",gap:\"2rem\",marginBottom:\"2rem\",alignItems:\"stretch\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",flexDirection:\"column\",height:\"100%\"},children:/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:\"#f8f9fa\",borderRadius:\"12px\",padding:\"1.5rem\",boxShadow:\"0 2px 8px rgba(0,0,0,0.1)\",flex:\"1\",display:\"flex\",flexDirection:\"column\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:/*#__PURE__*/_jsx(\"h2\",{style:{margin:0,color:'black'},children:\"Upcoming Events\"})}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"grid\",gridTemplateColumns:\"repeat(auto-fill, minmax(250px, 1fr))\",gap:\"1.5rem\",maxHeight:\"500px\",overflowY:\"auto\",paddingRight:\"0.5rem\"},className:\"custom-scrollbar\",children:acceptedEvents.length>0?acceptedEvents.map(event=>/*#__PURE__*/_jsxs(\"div\",{className:\"event-card\",children:[/*#__PURE__*/_jsx(\"h3\",{style:{margin:\"0 0 8px 0\",fontSize:\"0.9rem\",fontWeight:\"600\",color:\"#333\"},children:event.eventName||\"New Event\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",flexDirection:\"column\",gap:\"1px\",margin:\"0.25rem 0 0.5rem 0\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"event-details-icons\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDDD3\\uFE0F\"}),\" \",formatDate(event.eventDate)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"event-details-icons\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\u23F0\"}),\" \",formatTime(event.eventTime)]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"view-details-btn\",onClick:()=>navigate(\"/viewEvent/\".concat(event.id,\"?readonly=true\")),children:\"View Details \\u2192\"})]},\"event-\".concat(event.id))):/*#__PURE__*/_jsx(\"p\",{style:{gridColumn:\"1 / -1\",textAlign:\"center\",padding:\"2rem\",margin:0},children:\"No upcoming events. Your upcoming accepted events will appear here.\"})})]})}),/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",flexDirection:\"column\",height:\"100%\"},children:/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:\"#f8f9fa\",borderRadius:\"12px\",padding:\"1.5rem\",boxShadow:\"0 2px 8px rgba(0,0,0,0.1)\",flex:\"1\",display:\"flex\",flexDirection:\"column\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:/*#__PURE__*/_jsx(\"h2\",{style:{margin:0,color:'black',borderBottom:\"none\"},children:\"Calendar\"})}),/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:\"white\",borderRadius:\"16px\",padding:\"1rem\",boxShadow:\"0 4px 12px rgba(0,0,0,0.05)\",flex:\"1\"},children:/*#__PURE__*/_jsx(Calendar,{onChange:setDate,value:date,className:\"dashboard-calendar\",next2Label:null,prev2Label:null,tileClassName:_ref2=>{let{date,view}=_ref2;const dateEvents=getEventsForDate(date);return dateEvents.length>0?'has-events':null;},tileContent:_ref3=>{let{date,view}=_ref3;const dateEvents=getEventsForDate(date);if(dateEvents.length===0)return null;const now=new Date();const isPastDate=date<new Date(now.getFullYear(),now.getMonth(),now.getDate());const isToday=date.toDateString()===now.toDateString();return/*#__PURE__*/_jsx(\"div\",{style:{position:\"absolute\",bottom:\"4px\",left:\"50%\",transform:\"translateX(-50%)\",display:\"flex\",gap:\"2px\"},children:dateEvents.slice(0,3).map((event,i)=>{// For past dates, all dots are red\nif(isPastDate){return/*#__PURE__*/_jsx(\"div\",{style:{width:\"6px\",height:\"6px\",borderRadius:\"50%\",backgroundColor:\"#ff4d4f\",opacity:0.8}},i);}// For today, check if the event time has passed\nif(isToday&&event.eventTime){try{const[hours,minutes]=event.eventTime.split(':').map(Number);const eventTime=new Date(now);eventTime.setHours(hours,minutes,0,0);if(now>eventTime){return/*#__PURE__*/_jsx(\"div\",{style:{width:\"6px\",height:\"6px\",borderRadius:\"50%\",backgroundColor:\"#ff4d4f\",opacity:0.8}},i);}}catch(e){console.error('Error processing event time:',e);}}// Default to green for upcoming events\nreturn/*#__PURE__*/_jsx(\"div\",{style:{width:\"6px\",height:\"6px\",borderRadius:\"50%\",backgroundColor:\"#52c41a\",opacity:0.8}},i);})});}})}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:\"1.5rem\"},children:[/*#__PURE__*/_jsxs(\"h3\",{style:{marginTop:0,marginBottom:\"1rem\"},children:[\"Events on \",date.toLocaleDateString()]}),getEventsForDate(date).length===0?/*#__PURE__*/_jsx(\"p\",{style:{color:\"#6c757d\",textAlign:\"center\"},children:\"No events scheduled for this day.\"}):/*#__PURE__*/_jsx(\"ul\",{style:{listStyle:\"none\",padding:0,margin:0},children:getEventsForDate(date).map(event=>/*#__PURE__*/_jsxs(\"li\",{style:{backgroundColor:\"white\",padding:\"0.75rem 1rem 0.75rem 1.25rem\",borderRadius:\"6px\",marginBottom:\"0.5rem\",boxShadow:\"0 1px 3px rgba(0,0,0,0.1)\",display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",position:\"relative\",overflow:\"hidden\"},children:[(()=>{const now=new Date();const eventDate=new Date(event.eventDate);const isPastEvent=eventDate<new Date(now.getFullYear(),now.getMonth(),now.getDate()+1);// For today's events, check if the time has passed\nlet isEventPassed=isPastEvent;if(!isPastEvent&&event.eventTime&&eventDate.toDateString()===now.toDateString()){try{const[hours,minutes]=event.eventTime.split(':').map(Number);const eventTime=new Date(now);eventTime.setHours(hours,minutes,0,0);isEventPassed=now>eventTime;}catch(e){console.error('Error processing event time:',e);}}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{style:{position:\"absolute\",left:0,top:0,bottom:0,width:\"4px\",backgroundColor:isEventPassed?\"#ff4d4f\":\"#52c41a\"}}),isEventPassed&&/*#__PURE__*/_jsx(\"div\",{style:{position:\"absolute\",top:\"8px\",right:\"8px\",backgroundColor:\"#fff1f0\",color:\"#ff4d4f\",fontSize:\"0.7rem\",padding:\"2px 6px\",borderRadius:\"10px\",border:\"1px solid #ffccc7\",fontWeight:\"500\"},children:\"Past Event\"})]});})(),/*#__PURE__*/_jsxs(\"div\",{style:{marginLeft:\"8px\"},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontWeight:\"600\"},children:event.eventName}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"0.875rem\",color:\"#6c757d\"},children:formatTime(event.eventTime)})]})]},event.id))})]})]})})]}),/*#__PURE__*/_jsx(\"div\",{style:{gridColumn:\"1 / -1\"},children:/*#__PURE__*/_jsxs(\"div\",{className:\"pending-requests-card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section-header\",children:/*#__PURE__*/_jsx(\"h2\",{style:{margin:0,color:'black'},children:\"Pending Requests\"})}),pendingRequests.length>0?/*#__PURE__*/_jsx(\"ul\",{className:\"pending-list\",children:pendingRequests.map(request=>/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"request-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"request-details\",children:[/*#__PURE__*/_jsx(\"div\",{style:{fontWeight:\"600\",marginBottom:\"4px\"},children:request.eventName||\"New Event\"}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:\"0.875rem\",color:\"#6c757d\"},children:[request.eventDate?formatDate(request.eventDate):\"No Date\",\" • \",request.eventTime?formatTime(request.eventTime):\"No Time\",\" • \",request.plannerName||\"Planner\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"request-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"accept-btn\",onClick:()=>handleRequestResponse(request.requestId,\"accepted\"),children:\"Accept\"}),/*#__PURE__*/_jsx(\"button\",{className:\"reject-btn\",onClick:()=>handleRequestResponse(request.requestId,\"rejected\"),children:\"Reject\"})]})]})},request.requestId))}):/*#__PURE__*/_jsx(\"p\",{style:{textAlign:\"center\",color:\"#6c757d\",margin:\"1.5rem 0\"},children:\"No pending requests at the moment.\"})]})}),/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:\"#f8f9fa\",borderRadius:\"12px\",padding:\"1.5rem\",boxShadow:\"0 2px 8px rgba(0,0,0,0.1)\",gridColumn:\"1 / -1\",marginTop:\"2rem\"},children:/*#__PURE__*/_jsx(ChatUI,{listTitle:\"Planners\",vendors:conversations.map(conv=>{var _conv$planner;return{id:conv.conversation_id,// Use conversation_id instead of planner_id\nname:((_conv$planner=conv.planner)===null||_conv$planner===void 0?void 0:_conv$planner.name)||'Unknown Planner',lastMessage:conv.last_message_at?'Last message: '+new Date(conv.last_message_at).toLocaleString():'No messages yet',unread:0,// You could calculate this from unread messages\nplannerId:conv.planner_id,// Store the actual planner ID for selection\nconversationId:conv.conversation_id// Store the conversation ID\n};}),onSendMessage:handleSendMessage,onSelectVendor:handleSelectPlanner,selectedVendor:selectedPlanner,messages:currentConversation?chatMessages[currentConversation.conversation_id]||[]:[],unreadCount:unreadCount,showSearch:false})})]})}),showImageModal&&/*#__PURE__*/_jsx(\"div\",{style:{position:\"fixed\",top:0,left:0,right:0,bottom:0,backgroundColor:\"rgba(0, 0, 0, 0.8)\",display:\"flex\",justifyContent:\"center\",alignItems:\"center\",zIndex:1000},onClick:()=>setShowImageModal(false),children:/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:\"90%\",maxHeight:\"90%\",position:\"relative\"},children:[/*#__PURE__*/_jsx(\"button\",{onClick:e=>{e.stopPropagation();setShowImageModal(false);},style:{position:\"absolute\",top:\"-40px\",right:\"0\",background:\"none\",border:\"none\",color:\"white\",fontSize:\"24px\",cursor:\"pointer\",padding:\"8px\",zIndex:1001},children:\"\\u2715\"}),preview&&/*#__PURE__*/_jsx(\"img\",{src:preview,alt:\"Profile Preview\",style:{maxWidth:\"100%\",maxHeight:\"80vh\",borderRadius:\"8px\",boxShadow:\"0 4px 20px rgba(0,0,0,0.3)\"}})]})})]});}","map":{"version":3,"names":["useCallback","useEffect","useLayoutEffect","useState","Calendar","FaUser","useNavigate","supabase","ChatUI","Navbar","chatService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","VendorDashboard","_ref","session","navigate","vendorName","setVendorName","preview","setPreview","showImageModal","setShowImageModal","pendingRequests","setPendingRequests","acceptedEvents","setAcceptedEvents","date","setDate","Date","isLoading","setIsLoading","selectedPlanner","setSelectedPlanner","chatMessages","setChatMessages","conversations","setConversations","currentConversation","setCurrentConversation","unreadCount","setUnreadCount","document","body","classList","add","documentElement","style","overflow","window","scrollTo","timer","setTimeout","remove","clearTimeout","API_BASE","process","env","REACT_APP_BASE_URL","user","userId","id","updateUserRole","_user$user_metadata","data","auth","getUser","user_metadata","role","updateUser","fetchInitialData","vendorData","error","vendorError","from","select","eq","single","console","message","email","split","name","profile_picture","log","concat","requestsResponse","fetch","status","ok","Error","requestsData","json","pending","accepted","plannerIds","Set","length","forEach","req","eventDetails","events","event_id","eventName","eventDate","start_time","eventTime","venue","plannerId","planner_id","requestId","request_id","push","plannerPromises","map","response","plannerData","planners","Promise","all","plannerMap","Object","fromEntries","p","pendingWithNames","_objectSpread","plannerName","acceptedWithNames","subscription","channel","on","event","schema","table","filter","subscribe","unsubscribe","loadConversations","getUserConversations","loadUnreadCount","getUnreadCount","connect","onNewMessage","sender_id","prev","_message$sender","conversationId","conversation_id","newMessage","message_id","text","message_text","timestamp","created_at","isCurrentUser","sender","onMessageError","onMessageNotification","notification","removeAllListeners","handleSendMessage","sendMessage","sendMessageAPI","handleSelectPlanner","planner","conversation","joinConversation","getOrCreateConversation","messages","getConversationMessages","formattedMessages","msg","_msg$sender","markMessagesAsRead","handleRequestResponse","method","headers","JSON","stringify","errorData","alert","formatDate","dateString","options","year","month","day","toLocaleDateString","undefined","formatTime","dateTimeString","isNaN","getTime","hours","String","getHours","padStart","minutes","getMinutes","e","getEventsForDate","toDateString","display","justifyContent","alignItems","height","backgroundColor","children","textAlign","padding","borderRadius","boxShadow","width","margin","border","borderTop","animation","color","minHeight","background","flexDirection","flex","maxWidth","className","marginBottom","gap","cursor","transition","onClick","onMouseOver","currentTarget","transform","onMouseOut","src","alt","objectFit","fontSize","gridTemplateColumns","maxHeight","overflowY","paddingRight","fontWeight","gridColumn","borderBottom","onChange","value","next2Label","prev2Label","tileClassName","_ref2","view","dateEvents","tileContent","_ref3","now","isPastDate","getFullYear","getMonth","getDate","isToday","position","bottom","left","slice","i","opacity","Number","setHours","marginTop","listStyle","isPastEvent","isEventPassed","top","right","marginLeft","request","listTitle","vendors","conv","_conv$planner","lastMessage","last_message_at","toLocaleString","unread","onSendMessage","onSelectVendor","selectedVendor","showSearch","zIndex","stopPropagation"],"sources":["C:/Users/Ammaarah/EventuallyPerfect/QUANTIX/frontend/src/pages/VendorDashboard.jsx"],"sourcesContent":["import { useCallback, useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport { FaUser } from \"react-icons/fa\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { supabase } from \"../client\";\r\nimport ChatUI from \"../components/ChatUI\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport chatService from \"../services/chatService\";\r\n\r\nexport default function VendorDashboard({ session }) {\r\n  const navigate = useNavigate();\r\n  const [vendorName, setVendorName] = useState(\"Vendor\");\r\n  const [preview, setPreview] = useState(null);\r\n  const [showImageModal, setShowImageModal] = useState(false);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [acceptedEvents, setAcceptedEvents] = useState([]);\r\n  const [date, setDate] = useState(new Date());\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Chat state\r\n  const [selectedPlanner, setSelectedPlanner] = useState(null);\r\n  const [chatMessages, setChatMessages] = useState({});\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentConversation, setCurrentConversation] = useState(null);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n\r\n  // Prevent scrolling until page is fully loaded\r\n  useLayoutEffect(() => {\r\n    // Add a class to the body to prevent scrolling via CSS\r\n    document.body.classList.add(\"dashboard-loading\");\r\n\r\n    // Lock scroll on mount\r\n    document.documentElement.style.overflow = \"hidden\";\r\n    document.body.style.overflow = \"hidden\";\r\n\r\n    // Scroll to top immediately\r\n    window.scrollTo(0, 0);\r\n\r\n    // Re-enable scrolling after a longer delay (1000ms)\r\n    const timer = setTimeout(() => {\r\n      document.documentElement.style.overflow = \"auto\";\r\n      document.body.style.overflow = \"auto\";\r\n      document.body.classList.remove(\"dashboard-loading\");\r\n      window.scrollTo(0, 0);\r\n    }, 1000);\r\n\r\n    // Cleanup\r\n    return () => {\r\n      clearTimeout(timer);\r\n      document.documentElement.style.overflow = \"auto\";\r\n      document.body.style.overflow = \"auto\";\r\n      document.body.classList.remove(\"dashboard-loading\");\r\n    };\r\n  }, []);\r\n\r\n  const API_BASE = process.env.REACT_APP_BASE_URL || \"http://localhost:5000\";\r\n\r\n  useEffect(() => {\r\n    if (!session?.user) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    const userId = session.user.id;\r\n\r\n    // Ensure user role is set\r\n    const updateUserRole = async () => {\r\n      const {\r\n        data: { user },\r\n      } = await supabase.auth.getUser();\r\n\r\n      if (user && !user.user_metadata?.role) {\r\n        await supabase.auth.updateUser({\r\n          data: { role: \"vendor\" },\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchInitialData = async () => {\r\n      if (!session?.user) return;\r\n\r\n      try {\r\n        setIsLoading(true);\r\n        const userId = session.user.id;\r\n\r\n        // Vendor info\r\n        const { data: vendorData, error: vendorError } = await supabase\r\n          .from(\"vendors\")\r\n          .select(\"name, profile_picture\")\r\n          .eq(\"vendor_id\", userId)\r\n          .single();\r\n\r\n        if (vendorError || !vendorData) {\r\n          console.error(\"Error fetching vendor data:\", vendorError?.message);\r\n          const email = session.user.email || \"\";\r\n          setVendorName(email.split(\"@\")[0] || \"Vendor\");\r\n          setPreview(null);\r\n        } else {\r\n          setVendorName(vendorData.name);\r\n          setPreview(vendorData.profile_picture);\r\n        }\r\n\r\n        console.log(\"Fetching from:\", `/api/vendor-requests/${userId}`);\r\n\r\n        // Fetch vendor requests via API\r\n        const requestsResponse = await fetch(\r\n          `${API_BASE}/api/vendor-requests/${userId}`\r\n        );\r\n\r\n        console.log(\"Response status:\", requestsResponse.status);\r\n        console.log(\"Response OK:\", requestsResponse.ok);\r\n\r\n        if (!requestsResponse.ok) {\r\n          throw new Error(\r\n            `Vendor requests API error! status: ${requestsResponse.status}`\r\n          );\r\n        }\r\n\r\n        const requestsData = await requestsResponse.json();\r\n        console.log(\"API Requests data:\", requestsData);\r\n\r\n        const pending = [];\r\n        const accepted = [];\r\n        const plannerIds = new Set();\r\n\r\n        if (requestsData && requestsData.length > 0) {\r\n          requestsData.forEach((req) => {\r\n            const eventDetails = req.events\r\n              ? {\r\n                  id: req.events.event_id,\r\n                  eventName: req.events.name,\r\n                  eventDate: req.events.start_time\r\n                    ? new Date(req.events.start_time)\r\n                    : null,\r\n                  eventTime: req.events.start_time,\r\n                  venue: req.events.venue,\r\n                  plannerId: req.events.planner_id,\r\n                  requestId: req.request_id,\r\n                }\r\n              : null;\r\n\r\n            if (req.status === \"pending\" && eventDetails) {\r\n              pending.push(eventDetails);\r\n              plannerIds.add(req.events.planner_id);\r\n            } else if (req.status === \"accepted\" && eventDetails) {\r\n              accepted.push(eventDetails);\r\n              plannerIds.add(req.events.planner_id);\r\n            }\r\n          });\r\n        }\r\n\r\n        // Fetch planner names using your planner API\r\n        const plannerPromises = [...plannerIds].map(async (plannerId) => {\r\n          try {\r\n            const response = await fetch(\r\n              `${API_BASE}/api/planners/${plannerId}`\r\n            );\r\n            if (!response.ok) {\r\n              throw new Error(\r\n                `Planner API error for ${plannerId}: ${response.status}`\r\n              );\r\n            }\r\n            const plannerData = await response.json();\r\n            return { id: plannerId, name: plannerData.name || \"Planner\" };\r\n          } catch (error) {\r\n            console.error(`Error fetching planner ${plannerId}:`, error);\r\n            return { id: plannerId, name: \"Planner\" };\r\n          }\r\n        });\r\n\r\n        const planners = await Promise.all(plannerPromises);\r\n        const plannerMap = Object.fromEntries(\r\n          planners.map((p) => [p.id, p.name])\r\n        );\r\n\r\n        const pendingWithNames = pending.map((req) => ({\r\n          ...req,\r\n          plannerName: plannerMap[req.plannerId] || \"Planner\",\r\n        }));\r\n\r\n        const acceptedWithNames = accepted.map((req) => ({\r\n          ...req,\r\n          plannerName: plannerMap[req.plannerId] || \"Planner\",\r\n        }));\r\n\r\n        setPendingRequests(pendingWithNames);\r\n        setAcceptedEvents(acceptedWithNames);\r\n      } catch (error) {\r\n        console.error(\"Error in initial data fetch:\", error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    updateUserRole();\r\n\r\n    const subscription = supabase\r\n      .channel(\"vendor_requests_changes\")\r\n      .on(\r\n        \"postgres_changes\",\r\n        {\r\n          event: \"*\",\r\n          schema: \"public\",\r\n          table: \"vendor_requests\",\r\n          filter: `vendor_id=eq.${userId}`,\r\n        },\r\n        () => fetchInitialData()\r\n      )\r\n      .subscribe();\r\n\r\n    fetchInitialData();\r\n\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, [session, API_BASE]);\r\n\r\n  // Load conversations for the vendor\r\n  const loadConversations = useCallback(async () => {\r\n    if (!session?.user) return;\r\n\r\n    try {\r\n      const conversations = await chatService.getUserConversations(\r\n        session.user.id\r\n      );\r\n      console.log(\"Loaded conversations:\", conversations);\r\n      setConversations(conversations);\r\n    } catch (error) {\r\n      console.error(\"Error loading conversations:\", error);\r\n    }\r\n  }, [session?.user]);\r\n\r\n  // Load unread message count\r\n  const loadUnreadCount = useCallback(async () => {\r\n    if (!session?.user) return;\r\n\r\n    try {\r\n      const { unreadCount } = await chatService.getUnreadCount(session.user.id);\r\n      setUnreadCount(unreadCount);\r\n    } catch (error) {\r\n      console.error(\"Error loading unread count:\", error);\r\n    }\r\n  }, [session?.user]);\r\n\r\n  // Initialize chat service and set up real-time listeners\r\n  useEffect(() => {\r\n    if (session?.user) {\r\n      // Connect to chat service\r\n      chatService.connect(session.user.id);\r\n\r\n      // Set up real-time listeners\r\n      chatService.onNewMessage((message) => {\r\n        console.log(\"New message received on vendor side:\", message);\r\n        console.log(\"Current user ID:\", session.user.id);\r\n        console.log(\"Message sender ID:\", message.sender_id);\r\n        console.log(\"Is current user?\", message.sender_id === session.user.id);\r\n\r\n        // Update messages for the conversation\r\n        setChatMessages((prev) => {\r\n          const conversationId = message.conversation_id;\r\n          console.log(\"Updating messages for conversation:\", conversationId);\r\n          console.log(\r\n            \"Previous messages for this conversation:\",\r\n            prev[conversationId] || []\r\n          );\r\n\r\n          const newMessage = {\r\n            id: message.message_id,\r\n            text: message.message_text,\r\n            timestamp: message.created_at,\r\n            isCurrentUser: message.sender_id === session.user.id,\r\n            sender: message.sender?.name || \"Unknown\",\r\n            conversationId: message.conversation_id,\r\n          };\r\n\r\n          console.log(\"Adding new message:\", newMessage);\r\n\r\n          return {\r\n            ...prev,\r\n            [conversationId]: [...(prev[conversationId] || []), newMessage],\r\n          };\r\n        });\r\n      });\r\n\r\n      chatService.onMessageError((error) => {\r\n        console.error(\"Message error:\", error);\r\n      });\r\n\r\n      chatService.onMessageNotification((notification) => {\r\n        console.log(\"Message notification:\", notification);\r\n        setUnreadCount((prev) => prev + 1);\r\n      });\r\n\r\n      // Load conversations and unread count\r\n      loadConversations();\r\n      loadUnreadCount();\r\n    }\r\n\r\n    return () => {\r\n      chatService.removeAllListeners();\r\n    };\r\n  }, [session?.user, loadConversations, loadUnreadCount]);\r\n\r\n  // Handle sending a message\r\n  const handleSendMessage = async (message) => {\r\n    if (!currentConversation || !session?.user) return;\r\n\r\n    try {\r\n      // Send message via WebSocket for real-time delivery\r\n      chatService.sendMessage(\r\n        currentConversation.conversation_id,\r\n        session.user.id,\r\n        message.text,\r\n        \"text\"\r\n      );\r\n\r\n      // Also send via API as backup\r\n      await chatService.sendMessageAPI(\r\n        currentConversation.conversation_id,\r\n        session.user.id,\r\n        message.text,\r\n        \"text\"\r\n      );\r\n\r\n      // Update local state immediately for better UX\r\n      setChatMessages((prev) => ({\r\n        ...prev,\r\n        [currentConversation.conversation_id]: [\r\n          ...(prev[currentConversation.conversation_id] || []),\r\n          {\r\n            ...message,\r\n            conversationId: currentConversation.conversation_id,\r\n          },\r\n        ],\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle planner selection and load conversation\r\n  const handleSelectPlanner = async (planner) => {\r\n    if (!session?.user) return;\r\n\r\n    console.log(\"Vendor selecting planner:\", planner);\r\n    setSelectedPlanner(planner);\r\n\r\n    try {\r\n      let conversation;\r\n\r\n      // If planner has a conversation_id, use that directly\r\n      if (planner.conversationId) {\r\n        console.log(\"Using existing conversation:\", planner.conversationId);\r\n        conversation = { conversation_id: planner.conversationId };\r\n        setCurrentConversation(conversation);\r\n\r\n        // Join the conversation room for real-time updates\r\n        console.log(\"Joining conversation room:\", conversation.conversation_id);\r\n        chatService.joinConversation(conversation.conversation_id);\r\n      } else {\r\n        // Get or create conversation with the planner\r\n        conversation = await chatService.getOrCreateConversation(\r\n          planner.plannerId || planner.id, // Use plannerId if available, fallback to id\r\n          session.user.id\r\n        );\r\n\r\n        console.log(\"Got conversation:\", conversation);\r\n        setCurrentConversation(conversation);\r\n\r\n        // Join the conversation room for real-time updates\r\n        console.log(\"Joining conversation room:\", conversation.conversation_id);\r\n        chatService.joinConversation(conversation.conversation_id);\r\n      }\r\n\r\n      // Also join the user's personal room for notifications\r\n      chatService.connect(session.user.id);\r\n\r\n      // Load messages for this conversation\r\n      const messages = await chatService.getConversationMessages(\r\n        conversation.conversation_id\r\n      );\r\n\r\n      // Transform messages to match ChatUI format\r\n      const formattedMessages = messages.map((msg) => ({\r\n        id: msg.message_id,\r\n        text: msg.message_text,\r\n        timestamp: msg.created_at,\r\n        isCurrentUser: msg.sender_id === session.user.id,\r\n        sender: msg.sender?.name || \"Unknown\",\r\n      }));\r\n\r\n      setChatMessages((prev) => ({\r\n        ...prev,\r\n        [conversation.conversation_id]: formattedMessages,\r\n      }));\r\n\r\n      // Mark messages as read\r\n      await chatService.markMessagesAsRead(\r\n        conversation.conversation_id,\r\n        session.user.id\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error selecting planner:\", error);\r\n    }\r\n  };\r\n\r\n  const handleRequestResponse = async (requestId, status) => {\r\n    if (!session?.user) return;\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${API_BASE}/api/vendor-requests/${requestId}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            status: status,\r\n          }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Failed to update request status\");\r\n      }\r\n\r\n      alert(`Request ${status} successfully!`);\r\n    } catch (error) {\r\n      console.error(\"Error updating request status:\", error);\r\n      alert(`Failed to update request status: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return \"Date not specified\";\r\n    const options = { year: \"numeric\", month: \"short\", day: \"numeric\" };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  const formatTime = (dateTimeString) => {\r\n    if (!dateTimeString) return \"Time not specified\";\r\n    try {\r\n      // If it's a full ISO date string, extract just the time in 24h format\r\n      const date = new Date(dateTimeString);\r\n      if (isNaN(date.getTime())) return dateTimeString; // Return original if not a valid date\r\n\r\n      // Get hours and minutes, pad with leading zeros\r\n      const hours = String(date.getHours()).padStart(2, \"0\");\r\n      const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n\r\n      // Return in 24-hour format (HH:MM)\r\n      return `${hours}:${minutes}`;\r\n    } catch (e) {\r\n      console.error(\"Error formatting time:\", e);\r\n      return dateTimeString; // Return original if there's an error\r\n    }\r\n  };\r\n\r\n  const getEventsForDate = (date) => {\r\n    return acceptedEvents.filter((event) => {\r\n      const eventDate = new Date(event.eventDate);\r\n      return eventDate.toDateString() === date.toDateString();\r\n    });\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          height: \"100vh\",\r\n          backgroundColor: \"#f8f9fa\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            padding: \"2rem\",\r\n            borderRadius: \"8px\",\r\n            backgroundColor: \"white\",\r\n            boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              width: \"40px\",\r\n              height: \"40px\",\r\n              margin: \"0 auto 1rem\",\r\n              border: \"4px solid #FFF0F5\",\r\n              borderTop: \"4px solid #FFB6C1\",\r\n              borderRadius: \"50%\",\r\n              animation: \"spin 1s linear infinite\",\r\n            }}\r\n          />\r\n          <h3 style={{ color: \"#FFB6C1\" }}>Loading your dashboard...</h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        minHeight: \"100vh\",\r\n        background: \"radial-gradient(circle at 100% 0%, #FFE4C4, #FFB6C1)\",\r\n        padding: \"100px 0 0 0\",\r\n        margin: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <style>{`\r\n        .dashboard-calendar { width: 100%; border: none; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; height: 100%; }\r\n        .react-calendar__navigation { display: flex; margin-bottom: 1em; }\r\n        .react-calendar__navigation button { color: #ff6b8b; background: none; border: none; font-size: 1rem; font-weight: 600; cursor: pointer; padding: 0.5rem; border-radius: 8px; transition: all 0.2s; }\r\n        .react-calendar__navigation button:hover { background-color: #ffebee; }\r\n        .react-calendar__navigation button:disabled { background-color: transparent; color: #ccc; }\r\n        .react-calendar__month-view__weekdays { text-align: center; text-transform: uppercase; font-weight: 600; color: #ff6b8b; font-size: 0.75rem; margin-bottom: 0.5rem; }\r\n        .react-calendar__month-view__weekdays__weekday abbr { text-decoration: none; }\r\n        .react-calendar__month-view__weekdays__weekday--weekend abbr { color: #ff6b8b; }\r\n        .react-calendar__month-view__days__day--weekend { color: #ff6b8b; }\r\n        .react-calendar__tile { max-width: 100%; text-align: center; padding: 0.75em 0.5em; background: none; border: 2px solid transparent; border-radius: 50%; color: #333; font-weight: 500; transition: all 0.2s; }\r\n        .react-calendar__tile:enabled:hover, .react-calendar__tile:enabled:focus { background-color: #ffebee; border-color: #ffb6c1; transform: scale(1.1); }\r\n        .react-calendar__tile--now { background: #ffebee; border: 2px solid #ffb6c1; color: #ff6b8b; font-weight: 600; }\r\n        .react-calendar__tile--now:enabled:hover, .react-calendar__tile--now:enabled:focus { background: #ffd6de; border-color: #ff8fa3; }\r\n        .react-calendar__tile--active { background: #ffb6c1 !important; color: white !important; border-color: #ffb6c1 !important; font-weight: 600; }\r\n        .react-calendar__tile.has-events { position: relative; }\r\n        .react-calendar__tile--active:enabled:hover, .react-calendar__tile--active:enabled:focus { background: #ffc0cb !important; border-color: #ffc0cb !important; }\r\n        .react-calendar__month-view__days__day--neighboringMonth { color: #ccc; }\r\n        .section-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem; border-bottom: 1px solid rgba(0, 0, 0, 0.1); padding-bottom: 0.5rem; }\r\n        .event-card { position: relative; display: flex; flex-direction: column; min-height: auto; width: 100%; padding: 0.75rem; padding-bottom: 0.5rem; background: white; border-radius: 16px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); transition: transform 0.2s, box-shadow 0.2s; }\r\n        .event-card:hover { transform: translateY(-5px); box-shadow: 0 4px 12px rgba(0,0,0,0.15); }\r\n        .delete-event-btn { background: transparent; border: none; color: #ff4d4f; cursor: pointer; font-size: 16px; width: 24px; height: 24px; display: flex; align-items: center; justify-content: center; border-radius: 50%; transition: all 0.2s; position: absolute; top: 10px; right: 10px; }\r\n        .delete-event-btn:hover { background: rgba(255, 77, 79, 0.1); transform: scale(1.1); }\r\n        .event-details-icons { display: flex; align-items: center; gap: 4px; color: #555; font-size: 0.8rem; margin: 1px 0; }\r\n        .view-details-btn { \r\n          padding: 4px 10px; \r\n          background-color: #FFC0CB; \r\n          color: white; \r\n          border: none; \r\n          border-radius: 4px; \r\n          cursor: pointer; \r\n          font-size: 0.8rem; \r\n          display: flex; \r\n          align-items: center; \r\n          gap: 4px; \r\n          transition: all 0.2s; \r\n          margin-left: auto;\r\n          position: absolute;\r\n          top: 30px;\r\n          right: 10px;\r\n        }\r\n        \r\n        /* Hide scrollbar by default */\r\n        .custom-scrollbar {\r\n          overflow-y: hidden;\r\n          transition: overflow-y 0.2s ease-in-out;\r\n        }\r\n        \r\n        /* Show scrollbar on hover */\r\n        .custom-scrollbar:hover {\r\n          overflow-y: auto;\r\n        }\r\n        \r\n        /* Custom scrollbar styling */\r\n        .custom-scrollbar::-webkit-scrollbar {\r\n          width: 6px;\r\n        }\r\n        \r\n        .custom-scrollbar::-webkit-scrollbar-track {\r\n          background: #f1f1f1;\r\n          border-radius: 10px;\r\n          margin: 4px 0;\r\n        }\r\n        \r\n        .custom-scrollbar::-webkit-scrollbar-thumb {\r\n          background: #ccc;\r\n          border-radius: 10px;\r\n        }\r\n        \r\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover {\r\n          background: #aaa;\r\n        }\r\n        .view-details-btn:hover { \r\n          background-color: #ffa7b8;\r\n          transform: translateY(-1px);\r\n        }\r\n        .pending-requests-card { background: #f8f9fa; border-radius: 12px; padding: 1.5rem; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); }\r\n        .pending-list { list-style: none; padding: 0; margin: 0; }\r\n        .pending-list li { background: #FFF0F5; border-radius: 8px; padding: 0.75rem 1rem; margin-bottom: 0.5rem; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1); border: 1px solid #FFD1DC; }\r\n        .request-item { display: flex; justify-content: space-between; align-items: center; gap: 1rem; }\r\n        .request-details { flex: 1; }\r\n        .request-actions { display: flex; gap: 0.5rem; }\r\n        .accept-btn, .reject-btn { padding: 0.5rem 1rem; border: none; border-radius: 6px; font-weight: 500; cursor: pointer; transition: all 0.2s; }\r\n        .accept-btn { background-color: #4caf50; color: white; }\r\n        .accept-btn:hover { background-color: #45a049; transform: translateY(-1px); box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); }\r\n        .reject-btn { background-color: #f44336; color: white; }\r\n        .reject-btn:hover { background-color: #e53935; transform: translateY(-1px); box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); }\r\n      `}</style>\r\n      <Navbar session={session} />\r\n      <div\r\n        style={{\r\n          backgroundColor: \"white\",\r\n          flex: \"1\",\r\n          maxWidth: \"1200px\",\r\n          margin: \"0 auto\",\r\n          borderRadius: \"30px\",\r\n          padding: \"2rem\",\r\n          boxShadow: \"0 5px 20px rgba(0,0,0,0.1)\",\r\n        }}\r\n      >\r\n        <div className=\"vendor-dashboard-content\">\r\n          <div className=\"dashboard-main\">\r\n            <div\r\n              style={{\r\n                marginBottom: \"2rem\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                gap: \"1.5rem\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  width: \"80px\",\r\n                  height: \"80px\",\r\n                  borderRadius: \"50%\",\r\n                  backgroundColor: preview ? \"transparent\" : \"#FFDAB9\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  overflow: \"hidden\",\r\n                  border: \"3px solid white\",\r\n                  boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\r\n                  cursor: \"pointer\",\r\n                  transition: \"transform 0.2s\",\r\n                }}\r\n                onClick={() => preview && setShowImageModal(true)}\r\n                onMouseOver={(e) =>\r\n                  (e.currentTarget.style.transform = \"scale(1.05)\")\r\n                }\r\n                onMouseOut={(e) =>\r\n                  (e.currentTarget.style.transform = \"scale(1)\")\r\n                }\r\n              >\r\n                {preview ? (\r\n                  <img\r\n                    src={preview}\r\n                    alt=\"Profile\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      backgroundColor: \"#FFDAB9\",\r\n                    }}\r\n                  >\r\n                    <FaUser\r\n                      style={{\r\n                        fontSize: \"2.5rem\",\r\n                        color: \"#FFFFFF\",\r\n                        filter: \"drop-shadow(0 1px 2px rgba(0,0,0,0.1))\",\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        padding: \"0.5rem\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div>\r\n                <h1\r\n                  style={{\r\n                    fontSize: \"2rem\",\r\n                    color: \"#333\",\r\n                    margin: \"0 0 0.5rem 0\",\r\n                  }}\r\n                >\r\n                  Welcome back, {vendorName}!\r\n                </h1>\r\n                <p style={{ color: \"#666\", margin: 0, fontSize: \"1rem\" }}>\r\n                  Here's what's happening with your upcoming events and\r\n                  requests.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"1fr 1fr\",\r\n              gap: \"2rem\",\r\n              marginBottom: \"2rem\",\r\n              alignItems: \"stretch\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"#f8f9fa\",\r\n                  borderRadius: \"12px\",\r\n                  padding: \"1.5rem\",\r\n                  boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\r\n                  flex: \"1\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                <div className=\"section-header\">\r\n                  <h2 style={{ margin: 0, color: 'black' }}>Upcoming Events</h2>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    display: \"grid\",\r\n                    gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\r\n                    gap: \"1.5rem\",\r\n                    maxHeight: \"500px\",\r\n                    overflowY: \"auto\",\r\n                    paddingRight: \"0.5rem\",\r\n                  }}\r\n                  className=\"custom-scrollbar\"\r\n                >\r\n                  {acceptedEvents.length > 0 ? (\r\n                    acceptedEvents.map((event) => (\r\n                      <div key={`event-${event.id}`} className=\"event-card\">\r\n                        <h3\r\n                          style={{\r\n                            margin: \"0 0 8px 0\",\r\n                            fontSize: \"0.9rem\",\r\n                            fontWeight: \"600\",\r\n                            color: \"#333\",\r\n                          }}\r\n                        >\r\n                          {event.eventName || \"New Event\"}\r\n                        </h3>\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            gap: \"1px\",\r\n                            margin: \"0.25rem 0 0.5rem 0\",\r\n                          }}\r\n                        >\r\n                          <div className=\"event-details-icons\">\r\n                            <span>🗓️</span> {formatDate(event.eventDate)}\r\n                          </div>\r\n                          <div className=\"event-details-icons\">\r\n                            <span>⏰</span> {formatTime(event.eventTime)}\r\n                          </div>\r\n                        </div>\r\n                        <button\r\n                          className=\"view-details-btn\"\r\n                          onClick={() => navigate(`/viewEvent/${event.id}?readonly=true`)}\r\n                        >\r\n                          View Details →\r\n                        </button>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <p\r\n                      style={{\r\n                        gridColumn: \"1 / -1\",\r\n                        textAlign: \"center\",\r\n                        padding: \"2rem\",\r\n                        margin: 0,\r\n                      }}\r\n                    >\r\n                      No upcoming events. Your upcoming accepted events will appear here.\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"#f8f9fa\",\r\n                  borderRadius: \"12px\",\r\n                  padding: \"1.5rem\",\r\n                  boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\r\n                  flex: \"1\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                <div className=\"section-header\">\r\n                  <h2 style={{ margin: 0, color: 'black', borderBottom: \"none\" }}>Calendar</h2>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: \"16px\",\r\n                    padding: \"1rem\",\r\n                    boxShadow: \"0 4px 12px rgba(0,0,0,0.05)\",\r\n                    flex: \"1\",\r\n                  }}\r\n                >\r\n                  <Calendar\r\n                    onChange={setDate}\r\n                    value={date}\r\n                    className=\"dashboard-calendar\"\r\n                    next2Label={null}\r\n                    prev2Label={null}\r\n                    tileClassName={({ date, view }) => {\r\n                      const dateEvents = getEventsForDate(date);\r\n                      return dateEvents.length > 0 ? 'has-events' : null;\r\n                    }}\r\n                    tileContent={({ date, view }) => {\r\n                      const dateEvents = getEventsForDate(date);\r\n                      if (dateEvents.length === 0) return null;\r\n                      \r\n                      const now = new Date();\r\n                      const isPastDate = date < new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n                      const isToday = date.toDateString() === now.toDateString();\r\n                      \r\n                      return (\r\n                        <div\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            bottom: \"4px\",\r\n                            left: \"50%\",\r\n                            transform: \"translateX(-50%)\",\r\n                            display: \"flex\",\r\n                            gap: \"2px\",\r\n                          }}\r\n                        >\r\n                          {dateEvents.slice(0, 3).map((event, i) => {\r\n                            // For past dates, all dots are red\r\n                            if (isPastDate) {\r\n                              return (\r\n                                <div\r\n                                  key={i}\r\n                                  style={{\r\n                                    width: \"6px\",\r\n                                    height: \"6px\",\r\n                                    borderRadius: \"50%\",\r\n                                    backgroundColor: \"#ff4d4f\",\r\n                                    opacity: 0.8,\r\n                                  }}\r\n                                />\r\n                              );\r\n                            }\r\n                            \r\n                            // For today, check if the event time has passed\r\n                            if (isToday && event.eventTime) {\r\n                              try {\r\n                                const [hours, minutes] = event.eventTime.split(':').map(Number);\r\n                                const eventTime = new Date(now);\r\n                                eventTime.setHours(hours, minutes, 0, 0);\r\n                                \r\n                                if (now > eventTime) {\r\n                                  return (\r\n                                    <div\r\n                                      key={i}\r\n                                      style={{\r\n                                        width: \"6px\",\r\n                                        height: \"6px\",\r\n                                        borderRadius: \"50%\",\r\n                                        backgroundColor: \"#ff4d4f\",\r\n                                        opacity: 0.8,\r\n                                      }}\r\n                                    />\r\n                                  );\r\n                                }\r\n                              } catch (e) {\r\n                                console.error('Error processing event time:', e);\r\n                              }\r\n                            }\r\n                            \r\n                            // Default to green for upcoming events\r\n                            return (\r\n                              <div\r\n                                key={i}\r\n                                style={{\r\n                                  width: \"6px\",\r\n                                  height: \"6px\",\r\n                                  borderRadius: \"50%\",\r\n                                  backgroundColor: \"#52c41a\",\r\n                                  opacity: 0.8,\r\n                                }}\r\n                              />\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      );\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div style={{ marginTop: \"1.5rem\" }}>\r\n                  <h3 style={{ marginTop: 0, marginBottom: \"1rem\" }}>\r\n                    Events on {date.toLocaleDateString()}\r\n                  </h3>\r\n                  {getEventsForDate(date).length === 0 ? (\r\n                    <p style={{ color: \"#6c757d\", textAlign: \"center\" }}>\r\n                      No events scheduled for this day.\r\n                    </p>\r\n                  ) : (\r\n                    <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\r\n                      {getEventsForDate(date).map((event) => (\r\n                        <li\r\n                          key={event.id}\r\n                          style={{\r\n                            backgroundColor: \"white\",\r\n                            padding: \"0.75rem 1rem 0.75rem 1.25rem\",\r\n                            borderRadius: \"6px\",\r\n                            marginBottom: \"0.5rem\",\r\n                            boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            alignItems: \"center\",\r\n                            position: \"relative\",\r\n                            overflow: \"hidden\"\r\n                          }}\r\n                        >\r\n                          {(() => {\r\n                            const now = new Date();\r\n                            const eventDate = new Date(event.eventDate);\r\n                            const isPastEvent = eventDate < new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\r\n                            \r\n                            // For today's events, check if the time has passed\r\n                            let isEventPassed = isPastEvent;\r\n                            if (!isPastEvent && event.eventTime && eventDate.toDateString() === now.toDateString()) {\r\n                              try {\r\n                                const [hours, minutes] = event.eventTime.split(':').map(Number);\r\n                                const eventTime = new Date(now);\r\n                                eventTime.setHours(hours, minutes, 0, 0);\r\n                                isEventPassed = now > eventTime;\r\n                              } catch (e) {\r\n                                console.error('Error processing event time:', e);\r\n                              }\r\n                            }\r\n                            \r\n                            return (\r\n                              <>\r\n                                <div style={{\r\n                                  position: \"absolute\",\r\n                                  left: 0,\r\n                                  top: 0,\r\n                                  bottom: 0,\r\n                                  width: \"4px\",\r\n                                  backgroundColor: isEventPassed ? \"#ff4d4f\" : \"#52c41a\"\r\n                                }} />\r\n                                {isEventPassed && (\r\n                                  <div style={{\r\n                                    position: \"absolute\",\r\n                                    top: \"8px\",\r\n                                    right: \"8px\",\r\n                                    backgroundColor: \"#fff1f0\",\r\n                                    color: \"#ff4d4f\",\r\n                                    fontSize: \"0.7rem\",\r\n                                    padding: \"2px 6px\",\r\n                                    borderRadius: \"10px\",\r\n                                    border: \"1px solid #ffccc7\",\r\n                                    fontWeight: \"500\"\r\n                                  }}>\r\n                                    Past Event\r\n                                  </div>\r\n                                )}\r\n                              </>\r\n                            );\r\n                          })()}\r\n                          <div style={{ marginLeft: \"8px\" }}>\r\n                            <div style={{ fontWeight: \"600\" }}>\r\n                              {event.eventName}\r\n                            </div>\r\n                            <div\r\n                              style={{ fontSize: \"0.875rem\", color: \"#6c757d\" }}\r\n                            >\r\n                              {formatTime(event.eventTime)}\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Pending Requests Section */}\r\n          <div style={{ gridColumn: \"1 / -1\" }}>\r\n            <div className=\"pending-requests-card\">\r\n              <div className=\"section-header\">\r\n                <h2 style={{ margin: 0, color: 'black' }}>Pending Requests</h2>\r\n              </div>\r\n              {pendingRequests.length > 0 ? (\r\n                <ul className=\"pending-list\">\r\n                  {pendingRequests.map((request) => (\r\n                    <li key={request.requestId}>\r\n                      <div className=\"request-item\">\r\n                        <div className=\"request-details\">\r\n                          <div\r\n                            style={{ fontWeight: \"600\", marginBottom: \"4px\" }}\r\n                          >\r\n                            {request.eventName || \"New Event\"}\r\n                          </div>\r\n                          <div\r\n                            style={{ fontSize: \"0.875rem\", color: \"#6c757d\" }}\r\n                          >\r\n                            {request.eventDate\r\n                              ? formatDate(request.eventDate)\r\n                              : \"No Date\"}\r\n                            {\" • \"}\r\n                            {request.eventTime\r\n                              ? formatTime(request.eventTime)\r\n                              : \"No Time\"}\r\n                            {\" • \"}{request.plannerName || \"Planner\"}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"request-actions\">\r\n                          <button\r\n                            className=\"accept-btn\"\r\n                            onClick={() =>\r\n                              handleRequestResponse(\r\n                                request.requestId,\r\n                                \"accepted\"\r\n                              )\r\n                            }\r\n                          >\r\n                            Accept\r\n                          </button>\r\n                          <button\r\n                            className=\"reject-btn\"\r\n                            onClick={() =>\r\n                              handleRequestResponse(\r\n                                request.requestId,\r\n                                \"rejected\"\r\n                              )\r\n                            }\r\n                          >\r\n                            Reject\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              ) : (\r\n                <p\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    color: \"#6c757d\",\r\n                    margin: \"1.5rem 0\",\r\n                  }}\r\n                >\r\n                  No pending requests at the moment.\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Chat Section */}\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#f8f9fa\",\r\n              borderRadius: \"12px\",\r\n              padding: \"1.5rem\",\r\n              boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\r\n              gridColumn: \"1 / -1\",\r\n              marginTop: \"2rem\",\r\n            }}\r\n          >\r\n            <ChatUI\r\n              listTitle=\"Planners\"\r\n              vendors={conversations.map((conv) => ({\r\n                id: conv.conversation_id, // Use conversation_id instead of planner_id\r\n                name: conv.planner?.name || 'Unknown Planner',\r\n                lastMessage: conv.last_message_at ? 'Last message: ' + new Date(conv.last_message_at).toLocaleString() : 'No messages yet',\r\n                unread: 0, // You could calculate this from unread messages\r\n                plannerId: conv.planner_id, // Store the actual planner ID for selection\r\n                conversationId: conv.conversation_id, // Store the conversation ID\r\n              }))}\r\n              onSendMessage={handleSendMessage}\r\n              onSelectVendor={handleSelectPlanner}\r\n              selectedVendor={selectedPlanner}\r\n              messages={currentConversation ? chatMessages[currentConversation.conversation_id] || [] : []}\r\n              unreadCount={unreadCount}\r\n              showSearch={false}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Profile Picture Modal */}\r\n      {showImageModal && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            backgroundColor: \"rgba(0, 0, 0, 0.8)\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            zIndex: 1000,\r\n          }}\r\n          onClick={() => setShowImageModal(false)}\r\n        >\r\n          <div\r\n            style={{ maxWidth: \"90%\", maxHeight: \"90%\", position: \"relative\" }}\r\n          >\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                setShowImageModal(false);\r\n              }}\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"-40px\",\r\n                right: \"0\",\r\n                background: \"none\",\r\n                border: \"none\",\r\n                color: \"white\",\r\n                fontSize: \"24px\",\r\n                cursor: \"pointer\",\r\n                padding: \"8px\",\r\n                zIndex: 1001,\r\n              }}\r\n            >\r\n              ✕\r\n            </button>\r\n            {preview && (\r\n              <img\r\n                src={preview}\r\n                alt=\"Profile Preview\"\r\n                style={{\r\n                  maxWidth: \"100%\",\r\n                  maxHeight: \"80vh\",\r\n                  borderRadius: \"8px\",\r\n                  boxShadow: \"0 4px 20px rgba(0,0,0,0.3)\",\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
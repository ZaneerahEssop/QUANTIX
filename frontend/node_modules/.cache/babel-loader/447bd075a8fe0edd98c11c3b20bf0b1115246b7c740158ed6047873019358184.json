{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ammaarah\\\\EventuallyPerfect\\\\QUANTIX\\\\frontend\\\\src\\\\pages\\\\LoadingPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { supabase } from '../client';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoadingPage() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const handleOAuthCallback = async () => {\n      try {\n        // Handle OAuth callback if this is a redirect from OAuth\n        const {\n          data: {\n            session\n          },\n          error\n        } = await supabase.auth.getSession();\n        if (error) throw error;\n        if (!session) {\n          navigate('/login');\n          return;\n        }\n\n        // Check if this is a new signup by looking for the role in sessionStorage\n        const signupRole = sessionStorage.getItem('signupRole');\n        if (signupRole) {\n          // If this is a new signup, redirect to post-signup flow\n          navigate('/post-signup');\n          return;\n        }\n\n        // For existing users, fetch their role and redirect accordingly\n        const {\n          data: userData,\n          error: roleError\n        } = await supabase.from('users').select('user_role').eq('user_id', session.user.id).single();\n        if (roleError || !userData) {\n          console.error('Error fetching user role:', (roleError === null || roleError === void 0 ? void 0 : roleError.message) || 'No role found');\n          navigate('/login');\n          return;\n        }\n\n        // Redirect based on role for existing users\n        if (userData.user_role === 'planner') {\n          navigate('/dashboard');\n        } else if (userData.user_role === 'vendor') {\n          // Fetch vendor status before deciding\n          const {\n            data: vendor,\n            error: vendorError\n          } = await supabase.from(\"vendors\").select(\"status\").eq(\"vendor_id\", session.user.id).single();\n          if (vendorError || !vendor) {\n            console.error(\"Error fetching vendor status:\", vendorError === null || vendorError === void 0 ? void 0 : vendorError.message);\n            navigate(\"/pending-approval\");\n            return;\n          }\n          if (vendor.status === \"accepted\") {\n            navigate(\"/vendor-dashboard\");\n          } else if (vendor.status === \"pending\") {\n            navigate(\"/pending-approval\");\n          } else if (vendor.status === \"rejected\") {\n            navigate(\"/pending-approval\", {\n              state: {\n                status: \"rejected\"\n              }\n            });\n          } else {\n            navigate(\"/pending-approval\");\n          }\n        } else if (userData.user_role === 'admin') {\n          navigate('/admin-dashboard');\n        } else {\n          console.error('Unknown role:', userData.user_role);\n          navigate('/login');\n        }\n      } catch (error) {\n        console.error('Error in loading page:', error.message);\n        navigate('/login');\n      }\n    };\n    handleOAuthCallback();\n  }, [navigate, location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading your dashboard...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(LoadingPage, \"gMsdikdDs1f1NUVrv3Ag60oK04k=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = LoadingPage;\nexport default LoadingPage;\nvar _c;\n$RefreshReg$(_c, \"LoadingPage\");","map":{"version":3,"names":["React","useEffect","useNavigate","useLocation","supabase","jsxDEV","_jsxDEV","LoadingPage","_s","navigate","location","handleOAuthCallback","data","session","error","auth","getSession","signupRole","sessionStorage","getItem","userData","roleError","from","select","eq","user","id","single","console","message","user_role","vendor","vendorError","status","state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Ammaarah/EventuallyPerfect/QUANTIX/frontend/src/pages/LoadingPage.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport { supabase } from '../client';\r\nimport '../App.css';\r\n\r\nfunction LoadingPage() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const handleOAuthCallback = async () => {\r\n      try {\r\n        // Handle OAuth callback if this is a redirect from OAuth\r\n        const { data: { session }, error } = await supabase.auth.getSession();\r\n        \r\n        if (error) throw error;\r\n        \r\n        if (!session) {\r\n          navigate('/login');\r\n          return;\r\n        }\r\n\r\n        // Check if this is a new signup by looking for the role in sessionStorage\r\n        const signupRole = sessionStorage.getItem('signupRole');\r\n        \r\n        if (signupRole) {\r\n          // If this is a new signup, redirect to post-signup flow\r\n          navigate('/post-signup');\r\n          return;\r\n        }\r\n\r\n        // For existing users, fetch their role and redirect accordingly\r\n        const { data: userData, error: roleError } = await supabase\r\n          .from('users')\r\n          .select('user_role')\r\n          .eq('user_id', session.user.id)\r\n          .single();\r\n\r\n        if (roleError || !userData) {\r\n          console.error('Error fetching user role:', roleError?.message || 'No role found');\r\n          navigate('/login');\r\n          return;\r\n        }\r\n\r\n        // Redirect based on role for existing users\r\n        if (userData.user_role === 'planner') {\r\n          navigate('/dashboard');\r\n        } else if (userData.user_role === 'vendor') {\r\n          // Fetch vendor status before deciding\r\n          const { data: vendor, error: vendorError } = await supabase\r\n            .from(\"vendors\")\r\n            .select(\"status\")\r\n            .eq(\"vendor_id\", session.user.id)\r\n            .single();\r\n\r\n          if (vendorError || !vendor) {\r\n            console.error(\"Error fetching vendor status:\", vendorError?.message);\r\n            navigate(\"/pending-approval\");\r\n            return;\r\n          }\r\n\r\n          if (vendor.status === \"accepted\") {\r\n            navigate(\"/vendor-dashboard\");\r\n          } else if (vendor.status === \"pending\") {\r\n            navigate(\"/pending-approval\");\r\n          } else if (vendor.status === \"rejected\") {\r\n            navigate(\"/pending-approval\", { state: { status: \"rejected\" } });\r\n          } else {\r\n            navigate(\"/pending-approval\");\r\n          }\r\n        } else if (userData.user_role === 'admin') {\r\n          navigate('/admin-dashboard');\r\n        } else {\r\n          console.error('Unknown role:', userData.user_role);\r\n          navigate('/login');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error in loading page:', error.message);\r\n        navigate('/login');\r\n      }\r\n    };\r\n\r\n    handleOAuthCallback();\r\n  }, [navigate, location]);\r\n\r\n  return (\r\n    <div className=\"loading-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n      <p>Loading your dashboard...</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMU,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF;QACA,MAAM;UAAEC,IAAI,EAAE;YAAEC;UAAQ,CAAC;UAAEC;QAAM,CAAC,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAACC,UAAU,CAAC,CAAC;QAErE,IAAIF,KAAK,EAAE,MAAMA,KAAK;QAEtB,IAAI,CAACD,OAAO,EAAE;UACZJ,QAAQ,CAAC,QAAQ,CAAC;UAClB;QACF;;QAEA;QACA,MAAMQ,UAAU,GAAGC,cAAc,CAACC,OAAO,CAAC,YAAY,CAAC;QAEvD,IAAIF,UAAU,EAAE;UACd;UACAR,QAAQ,CAAC,cAAc,CAAC;UACxB;QACF;;QAEA;QACA,MAAM;UAAEG,IAAI,EAAEQ,QAAQ;UAAEN,KAAK,EAAEO;QAAU,CAAC,GAAG,MAAMjB,QAAQ,CACxDkB,IAAI,CAAC,OAAO,CAAC,CACbC,MAAM,CAAC,WAAW,CAAC,CACnBC,EAAE,CAAC,SAAS,EAAEX,OAAO,CAACY,IAAI,CAACC,EAAE,CAAC,CAC9BC,MAAM,CAAC,CAAC;QAEX,IAAIN,SAAS,IAAI,CAACD,QAAQ,EAAE;UAC1BQ,OAAO,CAACd,KAAK,CAAC,2BAA2B,EAAE,CAAAO,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEQ,OAAO,KAAI,eAAe,CAAC;UACjFpB,QAAQ,CAAC,QAAQ,CAAC;UAClB;QACF;;QAEA;QACA,IAAIW,QAAQ,CAACU,SAAS,KAAK,SAAS,EAAE;UACpCrB,QAAQ,CAAC,YAAY,CAAC;QACxB,CAAC,MAAM,IAAIW,QAAQ,CAACU,SAAS,KAAK,QAAQ,EAAE;UAC1C;UACA,MAAM;YAAElB,IAAI,EAAEmB,MAAM;YAAEjB,KAAK,EAAEkB;UAAY,CAAC,GAAG,MAAM5B,QAAQ,CACxDkB,IAAI,CAAC,SAAS,CAAC,CACfC,MAAM,CAAC,QAAQ,CAAC,CAChBC,EAAE,CAAC,WAAW,EAAEX,OAAO,CAACY,IAAI,CAACC,EAAE,CAAC,CAChCC,MAAM,CAAC,CAAC;UAEX,IAAIK,WAAW,IAAI,CAACD,MAAM,EAAE;YAC1BH,OAAO,CAACd,KAAK,CAAC,+BAA+B,EAAEkB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEH,OAAO,CAAC;YACpEpB,QAAQ,CAAC,mBAAmB,CAAC;YAC7B;UACF;UAEA,IAAIsB,MAAM,CAACE,MAAM,KAAK,UAAU,EAAE;YAChCxB,QAAQ,CAAC,mBAAmB,CAAC;UAC/B,CAAC,MAAM,IAAIsB,MAAM,CAACE,MAAM,KAAK,SAAS,EAAE;YACtCxB,QAAQ,CAAC,mBAAmB,CAAC;UAC/B,CAAC,MAAM,IAAIsB,MAAM,CAACE,MAAM,KAAK,UAAU,EAAE;YACvCxB,QAAQ,CAAC,mBAAmB,EAAE;cAAEyB,KAAK,EAAE;gBAAED,MAAM,EAAE;cAAW;YAAE,CAAC,CAAC;UAClE,CAAC,MAAM;YACLxB,QAAQ,CAAC,mBAAmB,CAAC;UAC/B;QACF,CAAC,MAAM,IAAIW,QAAQ,CAACU,SAAS,KAAK,OAAO,EAAE;UACzCrB,QAAQ,CAAC,kBAAkB,CAAC;QAC9B,CAAC,MAAM;UACLmB,OAAO,CAACd,KAAK,CAAC,eAAe,EAAEM,QAAQ,CAACU,SAAS,CAAC;UAClDrB,QAAQ,CAAC,QAAQ,CAAC;QACpB;MACF,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdc,OAAO,CAACd,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACe,OAAO,CAAC;QACtDpB,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC;IAEDE,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACF,QAAQ,EAAEC,QAAQ,CAAC,CAAC;EAExB,oBACEJ,OAAA;IAAK6B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC9B,OAAA;MAAK6B,SAAS,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACvClC,OAAA;MAAA8B,QAAA,EAAG;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV;AAAChC,EAAA,CAtFQD,WAAW;EAAA,QACDL,WAAW,EACXC,WAAW;AAAA;AAAAsC,EAAA,GAFrBlC,WAAW;AAwFpB,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
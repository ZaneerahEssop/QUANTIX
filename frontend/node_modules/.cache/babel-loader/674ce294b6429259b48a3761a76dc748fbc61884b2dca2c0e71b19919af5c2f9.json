{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ammaarah\\\\EventuallyPerfect\\\\QUANTIX\\\\frontend\\\\src\\\\pages\\\\VendorDashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useLayoutEffect, useState } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport { FaUser } from \"react-icons/fa\";\nimport { useNavigate } from \"react-router-dom\";\nimport { supabase } from \"../client\";\nimport ChatUI from \"../components/ChatUI\";\nimport Navbar from \"../components/Navbar\";\nimport chatService from \"../services/chatService\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function VendorDashboard({\n  session\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [vendorName, setVendorName] = useState(\"Vendor\");\n  const [preview, setPreview] = useState(null);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [pendingRequests, setPendingRequests] = useState([]);\n  const [acceptedEvents, setAcceptedEvents] = useState([]);\n  const [date, setDate] = useState(new Date());\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Chat state\n  const [selectedPlanner, setSelectedPlanner] = useState(null);\n  const [chatMessages, setChatMessages] = useState({});\n  const [conversations, setConversations] = useState([]);\n  const [currentConversation, setCurrentConversation] = useState(null);\n  const [unreadCount, setUnreadCount] = useState(0);\n\n  // Prevent scrolling until page is fully loaded\n  useLayoutEffect(() => {\n    // Add a class to the body to prevent scrolling via CSS\n    document.body.classList.add(\"dashboard-loading\");\n\n    // Lock scroll on mount\n    document.documentElement.style.overflow = \"hidden\";\n    document.body.style.overflow = \"hidden\";\n\n    // Scroll to top immediately\n    window.scrollTo(0, 0);\n\n    // Re-enable scrolling after a longer delay (1000ms)\n    const timer = setTimeout(() => {\n      document.documentElement.style.overflow = \"auto\";\n      document.body.style.overflow = \"auto\";\n      document.body.classList.remove(\"dashboard-loading\");\n      window.scrollTo(0, 0);\n    }, 1000);\n\n    // Cleanup\n    return () => {\n      clearTimeout(timer);\n      document.documentElement.style.overflow = \"auto\";\n      document.body.style.overflow = \"auto\";\n      document.body.classList.remove(\"dashboard-loading\");\n    };\n  }, []);\n  const API_BASE = process.env.REACT_APP_BASE_URL || \"http://localhost:5000\";\n  useEffect(() => {\n    if (!(session !== null && session !== void 0 && session.user)) {\n      setIsLoading(false);\n      return;\n    }\n    const userId = session.user.id;\n\n    // Ensure user role is set\n    const updateUserRole = async () => {\n      var _user$user_metadata;\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser();\n      if (user && !((_user$user_metadata = user.user_metadata) !== null && _user$user_metadata !== void 0 && _user$user_metadata.role)) {\n        await supabase.auth.updateUser({\n          data: {\n            role: \"vendor\"\n          }\n        });\n      }\n    };\n    const fetchInitialData = async () => {\n      if (!(session !== null && session !== void 0 && session.user)) return;\n      try {\n        setIsLoading(true);\n        const userId = session.user.id;\n\n        // Vendor info\n        const {\n          data: vendorData,\n          error: vendorError\n        } = await supabase.from(\"vendors\").select(\"name, profile_picture\").eq(\"vendor_id\", userId).single();\n        if (vendorError || !vendorData) {\n          console.error(\"Error fetching vendor data:\", vendorError === null || vendorError === void 0 ? void 0 : vendorError.message);\n          const email = session.user.email || \"\";\n          setVendorName(email.split(\"@\")[0] || \"Vendor\");\n          setPreview(null);\n        } else {\n          setVendorName(vendorData.name);\n          setPreview(vendorData.profile_picture);\n        }\n        console.log(\"Fetching from:\", `/api/vendor-requests/${userId}`);\n\n        // Fetch vendor requests via API\n        const requestsResponse = await fetch(`${API_BASE}/api/vendor-requests/${userId}`);\n        console.log(\"Response status:\", requestsResponse.status);\n        console.log(\"Response OK:\", requestsResponse.ok);\n        if (!requestsResponse.ok) {\n          throw new Error(`Vendor requests API error! status: ${requestsResponse.status}`);\n        }\n        const requestsData = await requestsResponse.json();\n        console.log(\"API Requests data:\", requestsData);\n        const pending = [];\n        const accepted = [];\n        const plannerIds = new Set();\n        if (requestsData && requestsData.length > 0) {\n          requestsData.forEach(req => {\n            const eventDetails = req.events ? {\n              id: req.events.event_id,\n              eventName: req.events.name,\n              eventDate: req.events.start_time ? new Date(req.events.start_time) : null,\n              eventTime: req.events.start_time,\n              venue: req.events.venue,\n              plannerId: req.events.planner_id,\n              requestId: req.request_id\n            } : null;\n            if (req.status === \"pending\" && eventDetails) {\n              pending.push(eventDetails);\n              plannerIds.add(req.events.planner_id);\n            } else if (req.status === \"accepted\" && eventDetails) {\n              accepted.push(eventDetails);\n              plannerIds.add(req.events.planner_id);\n            }\n          });\n        }\n\n        // Fetch planner names using your planner API\n        const plannerPromises = [...plannerIds].map(async plannerId => {\n          try {\n            const response = await fetch(`${API_BASE}/api/planners/${plannerId}`);\n            if (!response.ok) {\n              throw new Error(`Planner API error for ${plannerId}: ${response.status}`);\n            }\n            const plannerData = await response.json();\n            return {\n              id: plannerId,\n              name: plannerData.name || \"Planner\"\n            };\n          } catch (error) {\n            console.error(`Error fetching planner ${plannerId}:`, error);\n            return {\n              id: plannerId,\n              name: \"Planner\"\n            };\n          }\n        });\n        const planners = await Promise.all(plannerPromises);\n        const plannerMap = Object.fromEntries(planners.map(p => [p.id, p.name]));\n        const pendingWithNames = pending.map(req => ({\n          ...req,\n          plannerName: plannerMap[req.plannerId] || \"Planner\"\n        }));\n        const acceptedWithNames = accepted.map(req => ({\n          ...req,\n          plannerName: plannerMap[req.plannerId] || \"Planner\"\n        }));\n        setPendingRequests(pendingWithNames);\n        setAcceptedEvents(acceptedWithNames);\n      } catch (error) {\n        console.error(\"Error in initial data fetch:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    updateUserRole();\n    const subscription = supabase.channel(\"vendor_requests_changes\").on(\"postgres_changes\", {\n      event: \"*\",\n      schema: \"public\",\n      table: \"vendor_requests\",\n      filter: `vendor_id=eq.${userId}`\n    }, () => fetchInitialData()).subscribe();\n    fetchInitialData();\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [session, API_BASE]);\n\n  // Load conversations for the vendor\n  const loadConversations = useCallback(async () => {\n    if (!(session !== null && session !== void 0 && session.user)) return;\n    try {\n      const conversations = await chatService.getUserConversations(session.user.id);\n      console.log(\"Loaded conversations:\", conversations);\n      setConversations(conversations);\n    } catch (error) {\n      console.error(\"Error loading conversations:\", error);\n    }\n  }, [session === null || session === void 0 ? void 0 : session.user]);\n\n  // Load unread message count\n  const loadUnreadCount = useCallback(async () => {\n    if (!(session !== null && session !== void 0 && session.user)) return;\n    try {\n      const {\n        unreadCount\n      } = await chatService.getUnreadCount(session.user.id);\n      setUnreadCount(unreadCount);\n    } catch (error) {\n      console.error(\"Error loading unread count:\", error);\n    }\n  }, [session === null || session === void 0 ? void 0 : session.user]);\n\n  // Initialize chat service and set up real-time listeners\n  useEffect(() => {\n    if (session !== null && session !== void 0 && session.user) {\n      // Connect to chat service\n      chatService.connect(session.user.id);\n\n      // Set up real-time listeners\n      chatService.onNewMessage(message => {\n        console.log(\"New message received on vendor side:\", message);\n        console.log(\"Current user ID:\", session.user.id);\n        console.log(\"Message sender ID:\", message.sender_id);\n        console.log(\"Is current user?\", message.sender_id === session.user.id);\n\n        // Update messages for the conversation\n        setChatMessages(prev => {\n          var _message$sender;\n          const conversationId = message.conversation_id;\n          console.log(\"Updating messages for conversation:\", conversationId);\n          console.log(\"Previous messages for this conversation:\", prev[conversationId] || []);\n          const newMessage = {\n            id: message.message_id,\n            text: message.message_text,\n            timestamp: message.created_at,\n            isCurrentUser: message.sender_id === session.user.id,\n            sender: ((_message$sender = message.sender) === null || _message$sender === void 0 ? void 0 : _message$sender.name) || \"Unknown\",\n            conversationId: message.conversation_id\n          };\n          console.log(\"Adding new message:\", newMessage);\n          return {\n            ...prev,\n            [conversationId]: [...(prev[conversationId] || []), newMessage]\n          };\n        });\n      });\n      chatService.onMessageError(error => {\n        console.error(\"Message error:\", error);\n      });\n      chatService.onMessageNotification(notification => {\n        console.log(\"Message notification:\", notification);\n        setUnreadCount(prev => prev + 1);\n      });\n\n      // Load conversations and unread count\n      loadConversations();\n      loadUnreadCount();\n    }\n    return () => {\n      chatService.removeAllListeners();\n    };\n  }, [session === null || session === void 0 ? void 0 : session.user, loadConversations, loadUnreadCount]);\n\n  // Handle sending a message\n  const handleSendMessage = async message => {\n    if (!currentConversation || !(session !== null && session !== void 0 && session.user)) return;\n    try {\n      // Send message via WebSocket for real-time delivery\n      chatService.sendMessage(currentConversation.conversation_id, session.user.id, message.text, \"text\");\n\n      // Also send via API as backup\n      await chatService.sendMessageAPI(currentConversation.conversation_id, session.user.id, message.text, \"text\");\n\n      // Update local state immediately for better UX\n      setChatMessages(prev => ({\n        ...prev,\n        [currentConversation.conversation_id]: [...(prev[currentConversation.conversation_id] || []), {\n          ...message,\n          conversationId: currentConversation.conversation_id\n        }]\n      }));\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n\n  // Handle planner selection and load conversation\n  const handleSelectPlanner = async planner => {\n    if (!(session !== null && session !== void 0 && session.user)) return;\n    console.log(\"Vendor selecting planner:\", planner);\n    setSelectedPlanner(planner);\n    try {\n      let conversation;\n\n      // If planner has a conversation_id, use that directly\n      if (planner.conversationId) {\n        console.log(\"Using existing conversation:\", planner.conversationId);\n        conversation = {\n          conversation_id: planner.conversationId\n        };\n        setCurrentConversation(conversation);\n\n        // Join the conversation room for real-time updates\n        console.log(\"Joining conversation room:\", conversation.conversation_id);\n        chatService.joinConversation(conversation.conversation_id);\n      } else {\n        // Get or create conversation with the planner\n        conversation = await chatService.getOrCreateConversation(planner.plannerId || planner.id,\n        // Use plannerId if available, fallback to id\n        session.user.id);\n        console.log(\"Got conversation:\", conversation);\n        setCurrentConversation(conversation);\n\n        // Join the conversation room for real-time updates\n        console.log(\"Joining conversation room:\", conversation.conversation_id);\n        chatService.joinConversation(conversation.conversation_id);\n      }\n\n      // Also join the user's personal room for notifications\n      chatService.connect(session.user.id);\n\n      // Load messages for this conversation\n      const messages = await chatService.getConversationMessages(conversation.conversation_id);\n\n      // Transform messages to match ChatUI format\n      const formattedMessages = messages.map(msg => {\n        var _msg$sender;\n        return {\n          id: msg.message_id,\n          text: msg.message_text,\n          timestamp: msg.created_at,\n          isCurrentUser: msg.sender_id === session.user.id,\n          sender: ((_msg$sender = msg.sender) === null || _msg$sender === void 0 ? void 0 : _msg$sender.name) || \"Unknown\"\n        };\n      });\n      setChatMessages(prev => ({\n        ...prev,\n        [conversation.conversation_id]: formattedMessages\n      }));\n\n      // Mark messages as read\n      await chatService.markMessagesAsRead(conversation.conversation_id, session.user.id);\n    } catch (error) {\n      console.error(\"Error selecting planner:\", error);\n    }\n  };\n  const handleRequestResponse = async (requestId, status) => {\n    if (!(session !== null && session !== void 0 && session.user)) return;\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE}/api/vendor-requests/${requestId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          status: status\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Failed to update request status\");\n      }\n      alert(`Request ${status} successfully!`);\n    } catch (error) {\n      console.error(\"Error updating request status:\", error);\n      alert(`Failed to update request status: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const formatDate = dateString => {\n    if (!dateString) return \"Date not specified\";\n    const options = {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\"\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const formatTime = dateTimeString => {\n    if (!dateTimeString) return \"Time not specified\";\n    try {\n      // If it's a full ISO date string, extract just the time in 24h format\n      const date = new Date(dateTimeString);\n      if (isNaN(date.getTime())) return dateTimeString; // Return original if not a valid date\n\n      // Get hours and minutes, pad with leading zeros\n      const hours = String(date.getHours()).padStart(2, \"0\");\n      const minutes = String(date.getMinutes()).padStart(2, \"0\");\n\n      // Return in 24-hour format (HH:MM)\n      return `${hours}:${minutes}`;\n    } catch (e) {\n      console.error(\"Error formatting time:\", e);\n      return dateTimeString; // Return original if there's an error\n    }\n  };\n  const getEventsForDate = date => {\n    return acceptedEvents.filter(event => {\n      const eventDate = new Date(event.eventDate);\n      return eventDate.toDateString() === date.toDateString();\n    });\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n        backgroundColor: \"#f8f9fa\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          padding: \"2rem\",\n          borderRadius: \"8px\",\n          backgroundColor: \"white\",\n          boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"40px\",\n            height: \"40px\",\n            margin: \"0 auto 1rem\",\n            border: \"4px solid #FFF0F5\",\n            borderTop: \"4px solid #FFB6C1\",\n            borderRadius: \"50%\",\n            animation: \"spin 1s linear infinite\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: \"#FFB6C1\"\n          },\n          children: \"Loading your dashboard...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: \"100vh\",\n      background: \"radial-gradient(circle at 100% 0%, #FFE4C4, #FFB6C1)\",\n      padding: \"100px 0 0 0\",\n      margin: 0,\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .dashboard-calendar { width: 100%; border: none; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; height: 100%; }\n        .react-calendar__navigation { display: flex; margin-bottom: 1em; }\n        .react-calendar__navigation button { color: #ff6b8b; background: none; border: none; font-size: 1rem; font-weight: 600; cursor: pointer; padding: 0.5rem; border-radius: 8px; transition: all 0.2s; }\n        .react-calendar__navigation button:hover { background-color: #ffebee; }\n        .react-calendar__navigation button:disabled { background-color: transparent; color: #ccc; }\n        .react-calendar__month-view__weekdays { text-align: center; text-transform: uppercase; font-weight: 600; color: #ff6b8b; font-size: 0.75rem; margin-bottom: 0.5rem; }\n        .react-calendar__month-view__weekdays__weekday abbr { text-decoration: none; }\n        .react-calendar__month-view__weekdays__weekday--weekend abbr { color: #ff6b8b; }\n        .react-calendar__month-view__days__day--weekend { color: #ff6b8b; }\n        .react-calendar__tile { max-width: 100%; text-align: center; padding: 0.75em 0.5em; background: none; border: 2px solid transparent; border-radius: 50%; color: #333; font-weight: 500; transition: all 0.2s; }\n        .react-calendar__tile:enabled:hover, .react-calendar__tile:enabled:focus { background-color: #ffebee; border-color: #ffb6c1; transform: scale(1.1); }\n        .react-calendar__tile--now { background: #ffebee; border: 2px solid #ffb6c1; color: #ff6b8b; font-weight: 600; }\n        .react-calendar__tile--now:enabled:hover, .react-calendar__tile--now:enabled:focus { background: #ffd6de; border-color: #ff8fa3; }\n        .react-calendar__tile--active { background: #ffb6c1 !important; color: white !important; border-color: #ffb6c1 !important; font-weight: 600; }\n        .react-calendar__tile.has-events { position: relative; }\n        .react-calendar__tile--active:enabled:hover, .react-calendar__tile--active:enabled:focus { background: #ffc0cb !important; border-color: #ffc0cb !important; }\n        .react-calendar__month-view__days__day--neighboringMonth { color: #ccc; }\n        .section-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem; border-bottom: 1px solid rgba(0, 0, 0, 0.1); padding-bottom: 0.5rem; }\n        .event-card { position: relative; display: flex; flex-direction: column; min-height: auto; width: 100%; padding: 0.75rem; padding-bottom: 0.5rem; background: white; border-radius: 16px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); transition: transform 0.2s, box-shadow 0.2s; }\n        .event-card:hover { transform: translateY(-5px); box-shadow: 0 4px 12px rgba(0,0,0,0.15); }\n        .delete-event-btn { background: transparent; border: none; color: #ff4d4f; cursor: pointer; font-size: 16px; width: 24px; height: 24px; display: flex; align-items: center; justify-content: center; border-radius: 50%; transition: all 0.2s; position: absolute; top: 10px; right: 10px; }\n        .delete-event-btn:hover { background: rgba(255, 77, 79, 0.1); transform: scale(1.1); }\n        .event-details-icons { display: flex; align-items: center; gap: 4px; color: #555; font-size: 0.8rem; margin: 1px 0; }\n        .view-details-btn { \n          padding: 4px 10px; \n          background-color: #FFC0CB; \n          color: white; \n          border: none; \n          border-radius: 4px; \n          cursor: pointer; \n          font-size: 0.8rem; \n          display: flex; \n          align-items: center; \n          gap: 4px; \n          transition: all 0.2s; \n          margin-left: auto;\n          position: absolute;\n          top: 30px;\n          right: 10px;\n        }\n        \n        /* Hide scrollbar by default */\n        .custom-scrollbar {\n          overflow-y: hidden;\n          transition: overflow-y 0.2s ease-in-out;\n        }\n        \n        /* Show scrollbar on hover */\n        .custom-scrollbar:hover {\n          overflow-y: auto;\n        }\n        \n        /* Custom scrollbar styling */\n        .custom-scrollbar::-webkit-scrollbar {\n          width: 6px;\n        }\n        \n        .custom-scrollbar::-webkit-scrollbar-track {\n          background: #f1f1f1;\n          border-radius: 10px;\n          margin: 4px 0;\n        }\n        \n        .custom-scrollbar::-webkit-scrollbar-thumb {\n          background: #ccc;\n          border-radius: 10px;\n        }\n        \n        .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n          background: #aaa;\n        }\n        .view-details-btn:hover { \n          background-color: #ffa7b8;\n          transform: translateY(-1px);\n        }\n        .pending-requests-card { background: #f8f9fa; border-radius: 12px; padding: 1.5rem; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); }\n        .pending-list { list-style: none; padding: 0; margin: 0; }\n        .pending-list li { background: #FFF0F5; border-radius: 8px; padding: 0.75rem 1rem; margin-bottom: 0.5rem; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1); border: 1px solid #FFD1DC; }\n        .request-item { display: flex; justify-content: space-between; align-items: center; gap: 1rem; }\n        .request-details { flex: 1; }\n        .request-actions { display: flex; gap: 0.5rem; }\n        .accept-btn, .reject-btn { padding: 0.5rem 1rem; border: none; border-radius: 6px; font-weight: 500; cursor: pointer; transition: all 0.2s; }\n        .accept-btn { background-color: #4caf50; color: white; }\n        .accept-btn:hover { background-color: #45a049; transform: translateY(-1px); box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); }\n        .reject-btn { background-color: #f44336; color: white; }\n        .reject-btn:hover { background-color: #e53935; transform: translateY(-1px); box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      session: session\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"white\",\n        flex: \"1\",\n        maxWidth: \"1200px\",\n        margin: \"0 auto\",\n        borderRadius: \"30px\",\n        padding: \"2rem\",\n        boxShadow: \"0 5px 20px rgba(0,0,0,0.1)\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vendor-dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: \"2rem\",\n              display: \"flex\",\n              alignItems: \"center\",\n              gap: \"1.5rem\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"80px\",\n                height: \"80px\",\n                borderRadius: \"50%\",\n                backgroundColor: preview ? \"transparent\" : \"#FFDAB9\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                overflow: \"hidden\",\n                border: \"3px solid white\",\n                boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\n                cursor: \"pointer\",\n                transition: \"transform 0.2s\"\n              },\n              onClick: () => preview && setShowImageModal(true),\n              onMouseOver: e => e.currentTarget.style.transform = \"scale(1.05)\",\n              onMouseOut: e => e.currentTarget.style.transform = \"scale(1)\",\n              children: preview ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: preview,\n                alt: \"Profile\",\n                style: {\n                  width: \"100%\",\n                  height: \"100%\",\n                  objectFit: \"cover\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: \"100%\",\n                  height: \"100%\",\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  backgroundColor: \"#FFDAB9\"\n                },\n                children: /*#__PURE__*/_jsxDEV(FaUser, {\n                  style: {\n                    fontSize: \"2.5rem\",\n                    color: \"#FFFFFF\",\n                    filter: \"drop-shadow(0 1px 2px rgba(0,0,0,0.1))\",\n                    width: \"100%\",\n                    height: \"100%\",\n                    padding: \"0.5rem\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 674,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 664,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                style: {\n                  fontSize: \"2rem\",\n                  color: \"#333\",\n                  margin: \"0 0 0.5rem 0\"\n                },\n                children: [\"Welcome back, \", vendorName, \"!\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  color: \"#666\",\n                  margin: 0,\n                  fontSize: \"1rem\"\n                },\n                children: \"Here's what's happening with your upcoming events and requests.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"grid\",\n            gridTemplateColumns: \"1fr 1fr\",\n            gap: \"2rem\",\n            marginBottom: \"2rem\",\n            alignItems: \"stretch\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"column\",\n              height: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: \"#f8f9fa\",\n                borderRadius: \"12px\",\n                padding: \"1.5rem\",\n                boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\n                flex: \"1\",\n                display: \"flex\",\n                flexDirection: \"column\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"section-header\",\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  style: {\n                    margin: 0,\n                    color: 'black'\n                  },\n                  children: \"Upcoming Events\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 732,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"grid\",\n                  gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n                  gap: \"1.5rem\",\n                  maxHeight: \"500px\",\n                  overflowY: \"auto\",\n                  paddingRight: \"0.5rem\"\n                },\n                className: \"custom-scrollbar\",\n                children: acceptedEvents.length > 0 ? acceptedEvents.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"event-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    style: {\n                      margin: \"0 0 8px 0\",\n                      fontSize: \"0.9rem\",\n                      fontWeight: \"600\",\n                      color: \"#333\"\n                    },\n                    children: event.eventName || \"New Event\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 748,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      gap: \"1px\",\n                      margin: \"0.25rem 0 0.5rem 0\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"event-details-icons\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"\\uD83D\\uDDD3\\uFE0F\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 767,\n                        columnNumber: 29\n                      }, this), \" \", formatDate(event.eventDate)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 766,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"event-details-icons\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: \"\\u23F0\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 770,\n                        columnNumber: 29\n                      }, this), \" \", formatTime(event.eventTime)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 769,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 758,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"view-details-btn\",\n                    onClick: () => navigate(`/viewEvent/${event.id}?readonly=true`),\n                    children: \"View Details \\u2192\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 773,\n                    columnNumber: 25\n                  }, this)]\n                }, `event-${event.id}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 747,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    gridColumn: \"1 / -1\",\n                    textAlign: \"center\",\n                    padding: \"2rem\",\n                    margin: 0\n                  },\n                  children: \"No upcoming events. Your upcoming accepted events will appear here.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 782,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"column\",\n              height: \"100%\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: \"#f8f9fa\",\n                borderRadius: \"12px\",\n                padding: \"1.5rem\",\n                boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\n                flex: \"1\",\n                display: \"flex\",\n                flexDirection: \"column\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"section-header\",\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  style: {\n                    margin: 0,\n                    color: 'black',\n                    borderBottom: \"none\"\n                  },\n                  children: \"Calendar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 815,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 814,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  backgroundColor: \"white\",\n                  borderRadius: \"16px\",\n                  padding: \"1rem\",\n                  boxShadow: \"0 4px 12px rgba(0,0,0,0.05)\",\n                  flex: \"1\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Calendar, {\n                  onChange: setDate,\n                  value: date,\n                  className: \"dashboard-calendar\",\n                  next2Label: null,\n                  prev2Label: null,\n                  tileClassName: ({\n                    date,\n                    view\n                  }) => {\n                    const dateEvents = getEventsForDate(date);\n                    return dateEvents.length > 0 ? 'has-events' : null;\n                  },\n                  tileContent: ({\n                    date,\n                    view\n                  }) => {\n                    const dateEvents = getEventsForDate(date);\n                    if (dateEvents.length === 0) return null;\n                    const now = new Date();\n                    const isPastDate = date < new Date(now.getFullYear(), now.getMonth(), now.getDate());\n                    const isToday = date.toDateString() === now.toDateString();\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        position: \"absolute\",\n                        bottom: \"4px\",\n                        left: \"50%\",\n                        transform: \"translateX(-50%)\",\n                        display: \"flex\",\n                        gap: \"2px\"\n                      },\n                      children: dateEvents.slice(0, 3).map((event, i) => {\n                        // For past dates, all dots are red\n                        if (isPastDate) {\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              width: \"6px\",\n                              height: \"6px\",\n                              borderRadius: \"50%\",\n                              backgroundColor: \"#ff4d4f\",\n                              opacity: 0.8\n                            }\n                          }, i, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 859,\n                            columnNumber: 33\n                          }, this);\n                        }\n\n                        // For today, check if the event time has passed\n                        if (isToday && event.eventTime) {\n                          try {\n                            const [hours, minutes] = event.eventTime.split(':').map(Number);\n                            const eventTime = new Date(now);\n                            eventTime.setHours(hours, minutes, 0, 0);\n                            if (now > eventTime) {\n                              return /*#__PURE__*/_jsxDEV(\"div\", {\n                                style: {\n                                  width: \"6px\",\n                                  height: \"6px\",\n                                  borderRadius: \"50%\",\n                                  backgroundColor: \"#ff4d4f\",\n                                  opacity: 0.8\n                                }\n                              }, i, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 881,\n                                columnNumber: 37\n                              }, this);\n                            }\n                          } catch (e) {\n                            console.error('Error processing event time:', e);\n                          }\n                        }\n\n                        // Default to green for upcoming events\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            width: \"6px\",\n                            height: \"6px\",\n                            borderRadius: \"50%\",\n                            backgroundColor: \"#52c41a\",\n                            opacity: 0.8\n                          }\n                        }, i, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 900,\n                          columnNumber: 31\n                        }, this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 845,\n                      columnNumber: 25\n                    }, this);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 826,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginTop: \"1.5rem\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    marginTop: 0,\n                    marginBottom: \"1rem\"\n                  },\n                  children: [\"Events on \", date.toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 918,\n                  columnNumber: 19\n                }, this), getEventsForDate(date).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"#6c757d\",\n                    textAlign: \"center\"\n                  },\n                  children: \"No events scheduled for this day.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 922,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n                  style: {\n                    listStyle: \"none\",\n                    padding: 0,\n                    margin: 0\n                  },\n                  children: getEventsForDate(date).map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n                    style: {\n                      backgroundColor: \"white\",\n                      padding: \"0.75rem 1rem 0.75rem 1.25rem\",\n                      borderRadius: \"6px\",\n                      marginBottom: \"0.5rem\",\n                      boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\",\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                      position: \"relative\",\n                      overflow: \"hidden\"\n                    },\n                    children: [(() => {\n                      const now = new Date();\n                      const eventDate = new Date(event.eventDate);\n                      const isPastEvent = eventDate < new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\n\n                      // For today's events, check if the time has passed\n                      let isEventPassed = isPastEvent;\n                      if (!isPastEvent && event.eventTime && eventDate.toDateString() === now.toDateString()) {\n                        try {\n                          const [hours, minutes] = event.eventTime.split(':').map(Number);\n                          const eventTime = new Date(now);\n                          eventTime.setHours(hours, minutes, 0, 0);\n                          isEventPassed = now > eventTime;\n                        } catch (e) {\n                          console.error('Error processing event time:', e);\n                        }\n                      }\n                      return /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: \"absolute\",\n                            left: 0,\n                            top: 0,\n                            bottom: 0,\n                            width: \"4px\",\n                            backgroundColor: isEventPassed ? \"#ff4d4f\" : \"#52c41a\"\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 963,\n                          columnNumber: 33\n                        }, this), isEventPassed && /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            position: \"absolute\",\n                            top: \"8px\",\n                            right: \"8px\",\n                            backgroundColor: \"#fff1f0\",\n                            color: \"#ff4d4f\",\n                            fontSize: \"0.7rem\",\n                            padding: \"2px 6px\",\n                            borderRadius: \"10px\",\n                            border: \"1px solid #ffccc7\",\n                            fontWeight: \"500\"\n                          },\n                          children: \"Past Event\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 972,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true);\n                    })(), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        marginLeft: \"8px\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontWeight: \"600\"\n                        },\n                        children: event.eventName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 991,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        style: {\n                          fontSize: \"0.875rem\",\n                          color: \"#6c757d\"\n                        },\n                        children: formatTime(event.eventTime)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 994,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 990,\n                      columnNumber: 27\n                    }, this)]\n                  }, event.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 928,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 926,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 917,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            gridColumn: \"1 / -1\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pending-requests-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section-header\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                style: {\n                  margin: 0,\n                  color: 'black'\n                },\n                children: \"Pending Requests\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1013,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1012,\n              columnNumber: 15\n            }, this), pendingRequests.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"pending-list\",\n              children: pendingRequests.map(request => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"request-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"request-details\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        fontWeight: \"600\",\n                        marginBottom: \"4px\"\n                      },\n                      children: request.eventName || \"New Event\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1021,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        fontSize: \"0.875rem\",\n                        color: \"#6c757d\"\n                      },\n                      children: [request.eventDate ? formatDate(request.eventDate) : \"No Date\", \" • \", request.eventTime ? formatTime(request.eventTime) : \"No Time\", \" • \", request.plannerName || \"Planner\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1026,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1020,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"request-actions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"accept-btn\",\n                      onClick: () => handleRequestResponse(request.requestId, \"accepted\"),\n                      children: \"Accept\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1040,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"reject-btn\",\n                      onClick: () => handleRequestResponse(request.requestId, \"rejected\"),\n                      children: \"Reject\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1051,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1039,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1019,\n                  columnNumber: 23\n                }, this)\n              }, request.requestId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1018,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1016,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                textAlign: \"center\",\n                color: \"#6c757d\",\n                margin: \"1.5rem 0\"\n              },\n              children: \"No pending requests at the moment.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1068,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1011,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1010,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: \"#f8f9fa\",\n            borderRadius: \"12px\",\n            padding: \"1.5rem\",\n            boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\n            gridColumn: \"1 / -1\",\n            marginTop: \"2rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ChatUI, {\n            listTitle: \"Planners\",\n            vendors: conversations.map(conv => {\n              var _conv$planner;\n              return {\n                id: conv.conversation_id,\n                // Use conversation_id instead of planner_id\n                name: ((_conv$planner = conv.planner) === null || _conv$planner === void 0 ? void 0 : _conv$planner.name) || 'Unknown Planner',\n                lastMessage: conv.last_message_at ? 'Last message: ' + new Date(conv.last_message_at).toLocaleString() : 'No messages yet',\n                unread: 0,\n                // You could calculate this from unread messages\n                plannerId: conv.planner_id,\n                // Store the actual planner ID for selection\n                conversationId: conv.conversation_id // Store the conversation ID\n              };\n            }),\n            onSendMessage: handleSendMessage,\n            onSelectVendor: handleSelectPlanner,\n            selectedVendor: selectedPlanner,\n            messages: currentConversation ? chatMessages[currentConversation.conversation_id] || [] : [],\n            unreadCount: unreadCount,\n            showSearch: false\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1092,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1082,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 7\n    }, this), showImageModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        zIndex: 1000\n      },\n      onClick: () => setShowImageModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxWidth: \"90%\",\n          maxHeight: \"90%\",\n          position: \"relative\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.stopPropagation();\n            setShowImageModal(false);\n          },\n          style: {\n            position: \"absolute\",\n            top: \"-40px\",\n            right: \"0\",\n            background: \"none\",\n            border: \"none\",\n            color: \"white\",\n            fontSize: \"24px\",\n            cursor: \"pointer\",\n            padding: \"8px\",\n            zIndex: 1001\n          },\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1133,\n          columnNumber: 13\n        }, this), preview && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: preview,\n          alt: \"Profile Preview\",\n          style: {\n            maxWidth: \"100%\",\n            maxHeight: \"80vh\",\n            borderRadius: \"8px\",\n            boxShadow: \"0 4px 20px rgba(0,0,0,0.3)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1154,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 510,\n    columnNumber: 5\n  }, this);\n}\n_s(VendorDashboard, \"wzdzPlqlOEeogSwN2Ry9DReqrn4=\", false, function () {\n  return [useNavigate];\n});\n_c = VendorDashboard;\nvar _c;\n$RefreshReg$(_c, \"VendorDashboard\");","map":{"version":3,"names":["useCallback","useEffect","useLayoutEffect","useState","Calendar","FaUser","useNavigate","supabase","ChatUI","Navbar","chatService","jsxDEV","_jsxDEV","Fragment","_Fragment","VendorDashboard","session","_s","navigate","vendorName","setVendorName","preview","setPreview","showImageModal","setShowImageModal","pendingRequests","setPendingRequests","acceptedEvents","setAcceptedEvents","date","setDate","Date","isLoading","setIsLoading","selectedPlanner","setSelectedPlanner","chatMessages","setChatMessages","conversations","setConversations","currentConversation","setCurrentConversation","unreadCount","setUnreadCount","document","body","classList","add","documentElement","style","overflow","window","scrollTo","timer","setTimeout","remove","clearTimeout","API_BASE","process","env","REACT_APP_BASE_URL","user","userId","id","updateUserRole","_user$user_metadata","data","auth","getUser","user_metadata","role","updateUser","fetchInitialData","vendorData","error","vendorError","from","select","eq","single","console","message","email","split","name","profile_picture","log","requestsResponse","fetch","status","ok","Error","requestsData","json","pending","accepted","plannerIds","Set","length","forEach","req","eventDetails","events","event_id","eventName","eventDate","start_time","eventTime","venue","plannerId","planner_id","requestId","request_id","push","plannerPromises","map","response","plannerData","planners","Promise","all","plannerMap","Object","fromEntries","p","pendingWithNames","plannerName","acceptedWithNames","subscription","channel","on","event","schema","table","filter","subscribe","unsubscribe","loadConversations","getUserConversations","loadUnreadCount","getUnreadCount","connect","onNewMessage","sender_id","prev","_message$sender","conversationId","conversation_id","newMessage","message_id","text","message_text","timestamp","created_at","isCurrentUser","sender","onMessageError","onMessageNotification","notification","removeAllListeners","handleSendMessage","sendMessage","sendMessageAPI","handleSelectPlanner","planner","conversation","joinConversation","getOrCreateConversation","messages","getConversationMessages","formattedMessages","msg","_msg$sender","markMessagesAsRead","handleRequestResponse","method","headers","JSON","stringify","errorData","alert","formatDate","dateString","options","year","month","day","toLocaleDateString","undefined","formatTime","dateTimeString","isNaN","getTime","hours","String","getHours","padStart","minutes","getMinutes","e","getEventsForDate","toDateString","display","justifyContent","alignItems","height","backgroundColor","children","textAlign","padding","borderRadius","boxShadow","width","margin","border","borderTop","animation","fileName","_jsxFileName","lineNumber","columnNumber","color","minHeight","background","flexDirection","flex","maxWidth","className","marginBottom","gap","cursor","transition","onClick","onMouseOver","currentTarget","transform","onMouseOut","src","alt","objectFit","fontSize","gridTemplateColumns","maxHeight","overflowY","paddingRight","fontWeight","gridColumn","borderBottom","onChange","value","next2Label","prev2Label","tileClassName","view","dateEvents","tileContent","now","isPastDate","getFullYear","getMonth","getDate","isToday","position","bottom","left","slice","i","opacity","Number","setHours","marginTop","listStyle","isPastEvent","isEventPassed","top","right","marginLeft","request","listTitle","vendors","conv","_conv$planner","lastMessage","last_message_at","toLocaleString","unread","onSendMessage","onSelectVendor","selectedVendor","showSearch","zIndex","stopPropagation","_c","$RefreshReg$"],"sources":["C:/Users/Ammaarah/EventuallyPerfect/QUANTIX/frontend/src/pages/VendorDashboard.jsx"],"sourcesContent":["import { useCallback, useEffect, useLayoutEffect, useState } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport { FaUser } from \"react-icons/fa\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { supabase } from \"../client\";\r\nimport ChatUI from \"../components/ChatUI\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport chatService from \"../services/chatService\";\r\n\r\nexport default function VendorDashboard({ session }) {\r\n  const navigate = useNavigate();\r\n  const [vendorName, setVendorName] = useState(\"Vendor\");\r\n  const [preview, setPreview] = useState(null);\r\n  const [showImageModal, setShowImageModal] = useState(false);\r\n  const [pendingRequests, setPendingRequests] = useState([]);\r\n  const [acceptedEvents, setAcceptedEvents] = useState([]);\r\n  const [date, setDate] = useState(new Date());\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Chat state\r\n  const [selectedPlanner, setSelectedPlanner] = useState(null);\r\n  const [chatMessages, setChatMessages] = useState({});\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentConversation, setCurrentConversation] = useState(null);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n\r\n  // Prevent scrolling until page is fully loaded\r\n  useLayoutEffect(() => {\r\n    // Add a class to the body to prevent scrolling via CSS\r\n    document.body.classList.add(\"dashboard-loading\");\r\n\r\n    // Lock scroll on mount\r\n    document.documentElement.style.overflow = \"hidden\";\r\n    document.body.style.overflow = \"hidden\";\r\n\r\n    // Scroll to top immediately\r\n    window.scrollTo(0, 0);\r\n\r\n    // Re-enable scrolling after a longer delay (1000ms)\r\n    const timer = setTimeout(() => {\r\n      document.documentElement.style.overflow = \"auto\";\r\n      document.body.style.overflow = \"auto\";\r\n      document.body.classList.remove(\"dashboard-loading\");\r\n      window.scrollTo(0, 0);\r\n    }, 1000);\r\n\r\n    // Cleanup\r\n    return () => {\r\n      clearTimeout(timer);\r\n      document.documentElement.style.overflow = \"auto\";\r\n      document.body.style.overflow = \"auto\";\r\n      document.body.classList.remove(\"dashboard-loading\");\r\n    };\r\n  }, []);\r\n\r\n  const API_BASE = process.env.REACT_APP_BASE_URL || \"http://localhost:5000\";\r\n\r\n  useEffect(() => {\r\n    if (!session?.user) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n\r\n    const userId = session.user.id;\r\n\r\n    // Ensure user role is set\r\n    const updateUserRole = async () => {\r\n      const {\r\n        data: { user },\r\n      } = await supabase.auth.getUser();\r\n\r\n      if (user && !user.user_metadata?.role) {\r\n        await supabase.auth.updateUser({\r\n          data: { role: \"vendor\" },\r\n        });\r\n      }\r\n    };\r\n\r\n    const fetchInitialData = async () => {\r\n      if (!session?.user) return;\r\n\r\n      try {\r\n        setIsLoading(true);\r\n        const userId = session.user.id;\r\n\r\n        // Vendor info\r\n        const { data: vendorData, error: vendorError } = await supabase\r\n          .from(\"vendors\")\r\n          .select(\"name, profile_picture\")\r\n          .eq(\"vendor_id\", userId)\r\n          .single();\r\n\r\n        if (vendorError || !vendorData) {\r\n          console.error(\"Error fetching vendor data:\", vendorError?.message);\r\n          const email = session.user.email || \"\";\r\n          setVendorName(email.split(\"@\")[0] || \"Vendor\");\r\n          setPreview(null);\r\n        } else {\r\n          setVendorName(vendorData.name);\r\n          setPreview(vendorData.profile_picture);\r\n        }\r\n\r\n        console.log(\"Fetching from:\", `/api/vendor-requests/${userId}`);\r\n\r\n        // Fetch vendor requests via API\r\n        const requestsResponse = await fetch(\r\n          `${API_BASE}/api/vendor-requests/${userId}`\r\n        );\r\n\r\n        console.log(\"Response status:\", requestsResponse.status);\r\n        console.log(\"Response OK:\", requestsResponse.ok);\r\n\r\n        if (!requestsResponse.ok) {\r\n          throw new Error(\r\n            `Vendor requests API error! status: ${requestsResponse.status}`\r\n          );\r\n        }\r\n\r\n        const requestsData = await requestsResponse.json();\r\n        console.log(\"API Requests data:\", requestsData);\r\n\r\n        const pending = [];\r\n        const accepted = [];\r\n        const plannerIds = new Set();\r\n\r\n        if (requestsData && requestsData.length > 0) {\r\n          requestsData.forEach((req) => {\r\n            const eventDetails = req.events\r\n              ? {\r\n                  id: req.events.event_id,\r\n                  eventName: req.events.name,\r\n                  eventDate: req.events.start_time\r\n                    ? new Date(req.events.start_time)\r\n                    : null,\r\n                  eventTime: req.events.start_time,\r\n                  venue: req.events.venue,\r\n                  plannerId: req.events.planner_id,\r\n                  requestId: req.request_id,\r\n                }\r\n              : null;\r\n\r\n            if (req.status === \"pending\" && eventDetails) {\r\n              pending.push(eventDetails);\r\n              plannerIds.add(req.events.planner_id);\r\n            } else if (req.status === \"accepted\" && eventDetails) {\r\n              accepted.push(eventDetails);\r\n              plannerIds.add(req.events.planner_id);\r\n            }\r\n          });\r\n        }\r\n\r\n        // Fetch planner names using your planner API\r\n        const plannerPromises = [...plannerIds].map(async (plannerId) => {\r\n          try {\r\n            const response = await fetch(\r\n              `${API_BASE}/api/planners/${plannerId}`\r\n            );\r\n            if (!response.ok) {\r\n              throw new Error(\r\n                `Planner API error for ${plannerId}: ${response.status}`\r\n              );\r\n            }\r\n            const plannerData = await response.json();\r\n            return { id: plannerId, name: plannerData.name || \"Planner\" };\r\n          } catch (error) {\r\n            console.error(`Error fetching planner ${plannerId}:`, error);\r\n            return { id: plannerId, name: \"Planner\" };\r\n          }\r\n        });\r\n\r\n        const planners = await Promise.all(plannerPromises);\r\n        const plannerMap = Object.fromEntries(\r\n          planners.map((p) => [p.id, p.name])\r\n        );\r\n\r\n        const pendingWithNames = pending.map((req) => ({\r\n          ...req,\r\n          plannerName: plannerMap[req.plannerId] || \"Planner\",\r\n        }));\r\n\r\n        const acceptedWithNames = accepted.map((req) => ({\r\n          ...req,\r\n          plannerName: plannerMap[req.plannerId] || \"Planner\",\r\n        }));\r\n\r\n        setPendingRequests(pendingWithNames);\r\n        setAcceptedEvents(acceptedWithNames);\r\n      } catch (error) {\r\n        console.error(\"Error in initial data fetch:\", error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    updateUserRole();\r\n\r\n    const subscription = supabase\r\n      .channel(\"vendor_requests_changes\")\r\n      .on(\r\n        \"postgres_changes\",\r\n        {\r\n          event: \"*\",\r\n          schema: \"public\",\r\n          table: \"vendor_requests\",\r\n          filter: `vendor_id=eq.${userId}`,\r\n        },\r\n        () => fetchInitialData()\r\n      )\r\n      .subscribe();\r\n\r\n    fetchInitialData();\r\n\r\n    return () => {\r\n      subscription.unsubscribe();\r\n    };\r\n  }, [session, API_BASE]);\r\n\r\n  // Load conversations for the vendor\r\n  const loadConversations = useCallback(async () => {\r\n    if (!session?.user) return;\r\n\r\n    try {\r\n      const conversations = await chatService.getUserConversations(\r\n        session.user.id\r\n      );\r\n      console.log(\"Loaded conversations:\", conversations);\r\n      setConversations(conversations);\r\n    } catch (error) {\r\n      console.error(\"Error loading conversations:\", error);\r\n    }\r\n  }, [session?.user]);\r\n\r\n  // Load unread message count\r\n  const loadUnreadCount = useCallback(async () => {\r\n    if (!session?.user) return;\r\n\r\n    try {\r\n      const { unreadCount } = await chatService.getUnreadCount(session.user.id);\r\n      setUnreadCount(unreadCount);\r\n    } catch (error) {\r\n      console.error(\"Error loading unread count:\", error);\r\n    }\r\n  }, [session?.user]);\r\n\r\n  // Initialize chat service and set up real-time listeners\r\n  useEffect(() => {\r\n    if (session?.user) {\r\n      // Connect to chat service\r\n      chatService.connect(session.user.id);\r\n\r\n      // Set up real-time listeners\r\n      chatService.onNewMessage((message) => {\r\n        console.log(\"New message received on vendor side:\", message);\r\n        console.log(\"Current user ID:\", session.user.id);\r\n        console.log(\"Message sender ID:\", message.sender_id);\r\n        console.log(\"Is current user?\", message.sender_id === session.user.id);\r\n\r\n        // Update messages for the conversation\r\n        setChatMessages((prev) => {\r\n          const conversationId = message.conversation_id;\r\n          console.log(\"Updating messages for conversation:\", conversationId);\r\n          console.log(\r\n            \"Previous messages for this conversation:\",\r\n            prev[conversationId] || []\r\n          );\r\n\r\n          const newMessage = {\r\n            id: message.message_id,\r\n            text: message.message_text,\r\n            timestamp: message.created_at,\r\n            isCurrentUser: message.sender_id === session.user.id,\r\n            sender: message.sender?.name || \"Unknown\",\r\n            conversationId: message.conversation_id,\r\n          };\r\n\r\n          console.log(\"Adding new message:\", newMessage);\r\n\r\n          return {\r\n            ...prev,\r\n            [conversationId]: [...(prev[conversationId] || []), newMessage],\r\n          };\r\n        });\r\n      });\r\n\r\n      chatService.onMessageError((error) => {\r\n        console.error(\"Message error:\", error);\r\n      });\r\n\r\n      chatService.onMessageNotification((notification) => {\r\n        console.log(\"Message notification:\", notification);\r\n        setUnreadCount((prev) => prev + 1);\r\n      });\r\n\r\n      // Load conversations and unread count\r\n      loadConversations();\r\n      loadUnreadCount();\r\n    }\r\n\r\n    return () => {\r\n      chatService.removeAllListeners();\r\n    };\r\n  }, [session?.user, loadConversations, loadUnreadCount]);\r\n\r\n  // Handle sending a message\r\n  const handleSendMessage = async (message) => {\r\n    if (!currentConversation || !session?.user) return;\r\n\r\n    try {\r\n      // Send message via WebSocket for real-time delivery\r\n      chatService.sendMessage(\r\n        currentConversation.conversation_id,\r\n        session.user.id,\r\n        message.text,\r\n        \"text\"\r\n      );\r\n\r\n      // Also send via API as backup\r\n      await chatService.sendMessageAPI(\r\n        currentConversation.conversation_id,\r\n        session.user.id,\r\n        message.text,\r\n        \"text\"\r\n      );\r\n\r\n      // Update local state immediately for better UX\r\n      setChatMessages((prev) => ({\r\n        ...prev,\r\n        [currentConversation.conversation_id]: [\r\n          ...(prev[currentConversation.conversation_id] || []),\r\n          {\r\n            ...message,\r\n            conversationId: currentConversation.conversation_id,\r\n          },\r\n        ],\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle planner selection and load conversation\r\n  const handleSelectPlanner = async (planner) => {\r\n    if (!session?.user) return;\r\n\r\n    console.log(\"Vendor selecting planner:\", planner);\r\n    setSelectedPlanner(planner);\r\n\r\n    try {\r\n      let conversation;\r\n\r\n      // If planner has a conversation_id, use that directly\r\n      if (planner.conversationId) {\r\n        console.log(\"Using existing conversation:\", planner.conversationId);\r\n        conversation = { conversation_id: planner.conversationId };\r\n        setCurrentConversation(conversation);\r\n\r\n        // Join the conversation room for real-time updates\r\n        console.log(\"Joining conversation room:\", conversation.conversation_id);\r\n        chatService.joinConversation(conversation.conversation_id);\r\n      } else {\r\n        // Get or create conversation with the planner\r\n        conversation = await chatService.getOrCreateConversation(\r\n          planner.plannerId || planner.id, // Use plannerId if available, fallback to id\r\n          session.user.id\r\n        );\r\n\r\n        console.log(\"Got conversation:\", conversation);\r\n        setCurrentConversation(conversation);\r\n\r\n        // Join the conversation room for real-time updates\r\n        console.log(\"Joining conversation room:\", conversation.conversation_id);\r\n        chatService.joinConversation(conversation.conversation_id);\r\n      }\r\n\r\n      // Also join the user's personal room for notifications\r\n      chatService.connect(session.user.id);\r\n\r\n      // Load messages for this conversation\r\n      const messages = await chatService.getConversationMessages(\r\n        conversation.conversation_id\r\n      );\r\n\r\n      // Transform messages to match ChatUI format\r\n      const formattedMessages = messages.map((msg) => ({\r\n        id: msg.message_id,\r\n        text: msg.message_text,\r\n        timestamp: msg.created_at,\r\n        isCurrentUser: msg.sender_id === session.user.id,\r\n        sender: msg.sender?.name || \"Unknown\",\r\n      }));\r\n\r\n      setChatMessages((prev) => ({\r\n        ...prev,\r\n        [conversation.conversation_id]: formattedMessages,\r\n      }));\r\n\r\n      // Mark messages as read\r\n      await chatService.markMessagesAsRead(\r\n        conversation.conversation_id,\r\n        session.user.id\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error selecting planner:\", error);\r\n    }\r\n  };\r\n\r\n  const handleRequestResponse = async (requestId, status) => {\r\n    if (!session?.user) return;\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${API_BASE}/api/vendor-requests/${requestId}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            status: status,\r\n          }),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Failed to update request status\");\r\n      }\r\n\r\n      alert(`Request ${status} successfully!`);\r\n    } catch (error) {\r\n      console.error(\"Error updating request status:\", error);\r\n      alert(`Failed to update request status: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return \"Date not specified\";\r\n    const options = { year: \"numeric\", month: \"short\", day: \"numeric\" };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  const formatTime = (dateTimeString) => {\r\n    if (!dateTimeString) return \"Time not specified\";\r\n    try {\r\n      // If it's a full ISO date string, extract just the time in 24h format\r\n      const date = new Date(dateTimeString);\r\n      if (isNaN(date.getTime())) return dateTimeString; // Return original if not a valid date\r\n\r\n      // Get hours and minutes, pad with leading zeros\r\n      const hours = String(date.getHours()).padStart(2, \"0\");\r\n      const minutes = String(date.getMinutes()).padStart(2, \"0\");\r\n\r\n      // Return in 24-hour format (HH:MM)\r\n      return `${hours}:${minutes}`;\r\n    } catch (e) {\r\n      console.error(\"Error formatting time:\", e);\r\n      return dateTimeString; // Return original if there's an error\r\n    }\r\n  };\r\n\r\n  const getEventsForDate = (date) => {\r\n    return acceptedEvents.filter((event) => {\r\n      const eventDate = new Date(event.eventDate);\r\n      return eventDate.toDateString() === date.toDateString();\r\n    });\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          height: \"100vh\",\r\n          backgroundColor: \"#f8f9fa\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            padding: \"2rem\",\r\n            borderRadius: \"8px\",\r\n            backgroundColor: \"white\",\r\n            boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              width: \"40px\",\r\n              height: \"40px\",\r\n              margin: \"0 auto 1rem\",\r\n              border: \"4px solid #FFF0F5\",\r\n              borderTop: \"4px solid #FFB6C1\",\r\n              borderRadius: \"50%\",\r\n              animation: \"spin 1s linear infinite\",\r\n            }}\r\n          />\r\n          <h3 style={{ color: \"#FFB6C1\" }}>Loading your dashboard...</h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        minHeight: \"100vh\",\r\n        background: \"radial-gradient(circle at 100% 0%, #FFE4C4, #FFB6C1)\",\r\n        padding: \"100px 0 0 0\",\r\n        margin: 0,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <style>{`\r\n        .dashboard-calendar { width: 100%; border: none; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; height: 100%; }\r\n        .react-calendar__navigation { display: flex; margin-bottom: 1em; }\r\n        .react-calendar__navigation button { color: #ff6b8b; background: none; border: none; font-size: 1rem; font-weight: 600; cursor: pointer; padding: 0.5rem; border-radius: 8px; transition: all 0.2s; }\r\n        .react-calendar__navigation button:hover { background-color: #ffebee; }\r\n        .react-calendar__navigation button:disabled { background-color: transparent; color: #ccc; }\r\n        .react-calendar__month-view__weekdays { text-align: center; text-transform: uppercase; font-weight: 600; color: #ff6b8b; font-size: 0.75rem; margin-bottom: 0.5rem; }\r\n        .react-calendar__month-view__weekdays__weekday abbr { text-decoration: none; }\r\n        .react-calendar__month-view__weekdays__weekday--weekend abbr { color: #ff6b8b; }\r\n        .react-calendar__month-view__days__day--weekend { color: #ff6b8b; }\r\n        .react-calendar__tile { max-width: 100%; text-align: center; padding: 0.75em 0.5em; background: none; border: 2px solid transparent; border-radius: 50%; color: #333; font-weight: 500; transition: all 0.2s; }\r\n        .react-calendar__tile:enabled:hover, .react-calendar__tile:enabled:focus { background-color: #ffebee; border-color: #ffb6c1; transform: scale(1.1); }\r\n        .react-calendar__tile--now { background: #ffebee; border: 2px solid #ffb6c1; color: #ff6b8b; font-weight: 600; }\r\n        .react-calendar__tile--now:enabled:hover, .react-calendar__tile--now:enabled:focus { background: #ffd6de; border-color: #ff8fa3; }\r\n        .react-calendar__tile--active { background: #ffb6c1 !important; color: white !important; border-color: #ffb6c1 !important; font-weight: 600; }\r\n        .react-calendar__tile.has-events { position: relative; }\r\n        .react-calendar__tile--active:enabled:hover, .react-calendar__tile--active:enabled:focus { background: #ffc0cb !important; border-color: #ffc0cb !important; }\r\n        .react-calendar__month-view__days__day--neighboringMonth { color: #ccc; }\r\n        .section-header { display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem; border-bottom: 1px solid rgba(0, 0, 0, 0.1); padding-bottom: 0.5rem; }\r\n        .event-card { position: relative; display: flex; flex-direction: column; min-height: auto; width: 100%; padding: 0.75rem; padding-bottom: 0.5rem; background: white; border-radius: 16px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); transition: transform 0.2s, box-shadow 0.2s; }\r\n        .event-card:hover { transform: translateY(-5px); box-shadow: 0 4px 12px rgba(0,0,0,0.15); }\r\n        .delete-event-btn { background: transparent; border: none; color: #ff4d4f; cursor: pointer; font-size: 16px; width: 24px; height: 24px; display: flex; align-items: center; justify-content: center; border-radius: 50%; transition: all 0.2s; position: absolute; top: 10px; right: 10px; }\r\n        .delete-event-btn:hover { background: rgba(255, 77, 79, 0.1); transform: scale(1.1); }\r\n        .event-details-icons { display: flex; align-items: center; gap: 4px; color: #555; font-size: 0.8rem; margin: 1px 0; }\r\n        .view-details-btn { \r\n          padding: 4px 10px; \r\n          background-color: #FFC0CB; \r\n          color: white; \r\n          border: none; \r\n          border-radius: 4px; \r\n          cursor: pointer; \r\n          font-size: 0.8rem; \r\n          display: flex; \r\n          align-items: center; \r\n          gap: 4px; \r\n          transition: all 0.2s; \r\n          margin-left: auto;\r\n          position: absolute;\r\n          top: 30px;\r\n          right: 10px;\r\n        }\r\n        \r\n        /* Hide scrollbar by default */\r\n        .custom-scrollbar {\r\n          overflow-y: hidden;\r\n          transition: overflow-y 0.2s ease-in-out;\r\n        }\r\n        \r\n        /* Show scrollbar on hover */\r\n        .custom-scrollbar:hover {\r\n          overflow-y: auto;\r\n        }\r\n        \r\n        /* Custom scrollbar styling */\r\n        .custom-scrollbar::-webkit-scrollbar {\r\n          width: 6px;\r\n        }\r\n        \r\n        .custom-scrollbar::-webkit-scrollbar-track {\r\n          background: #f1f1f1;\r\n          border-radius: 10px;\r\n          margin: 4px 0;\r\n        }\r\n        \r\n        .custom-scrollbar::-webkit-scrollbar-thumb {\r\n          background: #ccc;\r\n          border-radius: 10px;\r\n        }\r\n        \r\n        .custom-scrollbar::-webkit-scrollbar-thumb:hover {\r\n          background: #aaa;\r\n        }\r\n        .view-details-btn:hover { \r\n          background-color: #ffa7b8;\r\n          transform: translateY(-1px);\r\n        }\r\n        .pending-requests-card { background: #f8f9fa; border-radius: 12px; padding: 1.5rem; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); }\r\n        .pending-list { list-style: none; padding: 0; margin: 0; }\r\n        .pending-list li { background: #FFF0F5; border-radius: 8px; padding: 0.75rem 1rem; margin-bottom: 0.5rem; box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1); border: 1px solid #FFD1DC; }\r\n        .request-item { display: flex; justify-content: space-between; align-items: center; gap: 1rem; }\r\n        .request-details { flex: 1; }\r\n        .request-actions { display: flex; gap: 0.5rem; }\r\n        .accept-btn, .reject-btn { padding: 0.5rem 1rem; border: none; border-radius: 6px; font-weight: 500; cursor: pointer; transition: all 0.2s; }\r\n        .accept-btn { background-color: #4caf50; color: white; }\r\n        .accept-btn:hover { background-color: #45a049; transform: translateY(-1px); box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); }\r\n        .reject-btn { background-color: #f44336; color: white; }\r\n        .reject-btn:hover { background-color: #e53935; transform: translateY(-1px); box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); }\r\n      `}</style>\r\n      <Navbar session={session} />\r\n      <div\r\n        style={{\r\n          backgroundColor: \"white\",\r\n          flex: \"1\",\r\n          maxWidth: \"1200px\",\r\n          margin: \"0 auto\",\r\n          borderRadius: \"30px\",\r\n          padding: \"2rem\",\r\n          boxShadow: \"0 5px 20px rgba(0,0,0,0.1)\",\r\n        }}\r\n      >\r\n        <div className=\"vendor-dashboard-content\">\r\n          <div className=\"dashboard-main\">\r\n            <div\r\n              style={{\r\n                marginBottom: \"2rem\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                gap: \"1.5rem\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  width: \"80px\",\r\n                  height: \"80px\",\r\n                  borderRadius: \"50%\",\r\n                  backgroundColor: preview ? \"transparent\" : \"#FFDAB9\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  overflow: \"hidden\",\r\n                  border: \"3px solid white\",\r\n                  boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\r\n                  cursor: \"pointer\",\r\n                  transition: \"transform 0.2s\",\r\n                }}\r\n                onClick={() => preview && setShowImageModal(true)}\r\n                onMouseOver={(e) =>\r\n                  (e.currentTarget.style.transform = \"scale(1.05)\")\r\n                }\r\n                onMouseOut={(e) =>\r\n                  (e.currentTarget.style.transform = \"scale(1)\")\r\n                }\r\n              >\r\n                {preview ? (\r\n                  <img\r\n                    src={preview}\r\n                    alt=\"Profile\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <div\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      backgroundColor: \"#FFDAB9\",\r\n                    }}\r\n                  >\r\n                    <FaUser\r\n                      style={{\r\n                        fontSize: \"2.5rem\",\r\n                        color: \"#FFFFFF\",\r\n                        filter: \"drop-shadow(0 1px 2px rgba(0,0,0,0.1))\",\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        padding: \"0.5rem\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div>\r\n                <h1\r\n                  style={{\r\n                    fontSize: \"2rem\",\r\n                    color: \"#333\",\r\n                    margin: \"0 0 0.5rem 0\",\r\n                  }}\r\n                >\r\n                  Welcome back, {vendorName}!\r\n                </h1>\r\n                <p style={{ color: \"#666\", margin: 0, fontSize: \"1rem\" }}>\r\n                  Here's what's happening with your upcoming events and\r\n                  requests.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              gridTemplateColumns: \"1fr 1fr\",\r\n              gap: \"2rem\",\r\n              marginBottom: \"2rem\",\r\n              alignItems: \"stretch\",\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"#f8f9fa\",\r\n                  borderRadius: \"12px\",\r\n                  padding: \"1.5rem\",\r\n                  boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\r\n                  flex: \"1\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                <div className=\"section-header\">\r\n                  <h2 style={{ margin: 0, color: 'black' }}>Upcoming Events</h2>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    display: \"grid\",\r\n                    gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\r\n                    gap: \"1.5rem\",\r\n                    maxHeight: \"500px\",\r\n                    overflowY: \"auto\",\r\n                    paddingRight: \"0.5rem\",\r\n                  }}\r\n                  className=\"custom-scrollbar\"\r\n                >\r\n                  {acceptedEvents.length > 0 ? (\r\n                    acceptedEvents.map((event) => (\r\n                      <div key={`event-${event.id}`} className=\"event-card\">\r\n                        <h3\r\n                          style={{\r\n                            margin: \"0 0 8px 0\",\r\n                            fontSize: \"0.9rem\",\r\n                            fontWeight: \"600\",\r\n                            color: \"#333\",\r\n                          }}\r\n                        >\r\n                          {event.eventName || \"New Event\"}\r\n                        </h3>\r\n                        <div\r\n                          style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            gap: \"1px\",\r\n                            margin: \"0.25rem 0 0.5rem 0\",\r\n                          }}\r\n                        >\r\n                          <div className=\"event-details-icons\">\r\n                            <span>🗓️</span> {formatDate(event.eventDate)}\r\n                          </div>\r\n                          <div className=\"event-details-icons\">\r\n                            <span>⏰</span> {formatTime(event.eventTime)}\r\n                          </div>\r\n                        </div>\r\n                        <button\r\n                          className=\"view-details-btn\"\r\n                          onClick={() => navigate(`/viewEvent/${event.id}?readonly=true`)}\r\n                        >\r\n                          View Details →\r\n                        </button>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <p\r\n                      style={{\r\n                        gridColumn: \"1 / -1\",\r\n                        textAlign: \"center\",\r\n                        padding: \"2rem\",\r\n                        margin: 0,\r\n                      }}\r\n                    >\r\n                      No upcoming events. Your upcoming accepted events will appear here.\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  backgroundColor: \"#f8f9fa\",\r\n                  borderRadius: \"12px\",\r\n                  padding: \"1.5rem\",\r\n                  boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\r\n                  flex: \"1\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                }}\r\n              >\r\n                <div className=\"section-header\">\r\n                  <h2 style={{ margin: 0, color: 'black', borderBottom: \"none\" }}>Calendar</h2>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"white\",\r\n                    borderRadius: \"16px\",\r\n                    padding: \"1rem\",\r\n                    boxShadow: \"0 4px 12px rgba(0,0,0,0.05)\",\r\n                    flex: \"1\",\r\n                  }}\r\n                >\r\n                  <Calendar\r\n                    onChange={setDate}\r\n                    value={date}\r\n                    className=\"dashboard-calendar\"\r\n                    next2Label={null}\r\n                    prev2Label={null}\r\n                    tileClassName={({ date, view }) => {\r\n                      const dateEvents = getEventsForDate(date);\r\n                      return dateEvents.length > 0 ? 'has-events' : null;\r\n                    }}\r\n                    tileContent={({ date, view }) => {\r\n                      const dateEvents = getEventsForDate(date);\r\n                      if (dateEvents.length === 0) return null;\r\n                      \r\n                      const now = new Date();\r\n                      const isPastDate = date < new Date(now.getFullYear(), now.getMonth(), now.getDate());\r\n                      const isToday = date.toDateString() === now.toDateString();\r\n                      \r\n                      return (\r\n                        <div\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            bottom: \"4px\",\r\n                            left: \"50%\",\r\n                            transform: \"translateX(-50%)\",\r\n                            display: \"flex\",\r\n                            gap: \"2px\",\r\n                          }}\r\n                        >\r\n                          {dateEvents.slice(0, 3).map((event, i) => {\r\n                            // For past dates, all dots are red\r\n                            if (isPastDate) {\r\n                              return (\r\n                                <div\r\n                                  key={i}\r\n                                  style={{\r\n                                    width: \"6px\",\r\n                                    height: \"6px\",\r\n                                    borderRadius: \"50%\",\r\n                                    backgroundColor: \"#ff4d4f\",\r\n                                    opacity: 0.8,\r\n                                  }}\r\n                                />\r\n                              );\r\n                            }\r\n                            \r\n                            // For today, check if the event time has passed\r\n                            if (isToday && event.eventTime) {\r\n                              try {\r\n                                const [hours, minutes] = event.eventTime.split(':').map(Number);\r\n                                const eventTime = new Date(now);\r\n                                eventTime.setHours(hours, minutes, 0, 0);\r\n                                \r\n                                if (now > eventTime) {\r\n                                  return (\r\n                                    <div\r\n                                      key={i}\r\n                                      style={{\r\n                                        width: \"6px\",\r\n                                        height: \"6px\",\r\n                                        borderRadius: \"50%\",\r\n                                        backgroundColor: \"#ff4d4f\",\r\n                                        opacity: 0.8,\r\n                                      }}\r\n                                    />\r\n                                  );\r\n                                }\r\n                              } catch (e) {\r\n                                console.error('Error processing event time:', e);\r\n                              }\r\n                            }\r\n                            \r\n                            // Default to green for upcoming events\r\n                            return (\r\n                              <div\r\n                                key={i}\r\n                                style={{\r\n                                  width: \"6px\",\r\n                                  height: \"6px\",\r\n                                  borderRadius: \"50%\",\r\n                                  backgroundColor: \"#52c41a\",\r\n                                  opacity: 0.8,\r\n                                }}\r\n                              />\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      );\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div style={{ marginTop: \"1.5rem\" }}>\r\n                  <h3 style={{ marginTop: 0, marginBottom: \"1rem\" }}>\r\n                    Events on {date.toLocaleDateString()}\r\n                  </h3>\r\n                  {getEventsForDate(date).length === 0 ? (\r\n                    <p style={{ color: \"#6c757d\", textAlign: \"center\" }}>\r\n                      No events scheduled for this day.\r\n                    </p>\r\n                  ) : (\r\n                    <ul style={{ listStyle: \"none\", padding: 0, margin: 0 }}>\r\n                      {getEventsForDate(date).map((event) => (\r\n                        <li\r\n                          key={event.id}\r\n                          style={{\r\n                            backgroundColor: \"white\",\r\n                            padding: \"0.75rem 1rem 0.75rem 1.25rem\",\r\n                            borderRadius: \"6px\",\r\n                            marginBottom: \"0.5rem\",\r\n                            boxShadow: \"0 1px 3px rgba(0,0,0,0.1)\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                            alignItems: \"center\",\r\n                            position: \"relative\",\r\n                            overflow: \"hidden\"\r\n                          }}\r\n                        >\r\n                          {(() => {\r\n                            const now = new Date();\r\n                            const eventDate = new Date(event.eventDate);\r\n                            const isPastEvent = eventDate < new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\r\n                            \r\n                            // For today's events, check if the time has passed\r\n                            let isEventPassed = isPastEvent;\r\n                            if (!isPastEvent && event.eventTime && eventDate.toDateString() === now.toDateString()) {\r\n                              try {\r\n                                const [hours, minutes] = event.eventTime.split(':').map(Number);\r\n                                const eventTime = new Date(now);\r\n                                eventTime.setHours(hours, minutes, 0, 0);\r\n                                isEventPassed = now > eventTime;\r\n                              } catch (e) {\r\n                                console.error('Error processing event time:', e);\r\n                              }\r\n                            }\r\n                            \r\n                            return (\r\n                              <>\r\n                                <div style={{\r\n                                  position: \"absolute\",\r\n                                  left: 0,\r\n                                  top: 0,\r\n                                  bottom: 0,\r\n                                  width: \"4px\",\r\n                                  backgroundColor: isEventPassed ? \"#ff4d4f\" : \"#52c41a\"\r\n                                }} />\r\n                                {isEventPassed && (\r\n                                  <div style={{\r\n                                    position: \"absolute\",\r\n                                    top: \"8px\",\r\n                                    right: \"8px\",\r\n                                    backgroundColor: \"#fff1f0\",\r\n                                    color: \"#ff4d4f\",\r\n                                    fontSize: \"0.7rem\",\r\n                                    padding: \"2px 6px\",\r\n                                    borderRadius: \"10px\",\r\n                                    border: \"1px solid #ffccc7\",\r\n                                    fontWeight: \"500\"\r\n                                  }}>\r\n                                    Past Event\r\n                                  </div>\r\n                                )}\r\n                              </>\r\n                            );\r\n                          })()}\r\n                          <div style={{ marginLeft: \"8px\" }}>\r\n                            <div style={{ fontWeight: \"600\" }}>\r\n                              {event.eventName}\r\n                            </div>\r\n                            <div\r\n                              style={{ fontSize: \"0.875rem\", color: \"#6c757d\" }}\r\n                            >\r\n                              {formatTime(event.eventTime)}\r\n                            </div>\r\n                          </div>\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Pending Requests Section */}\r\n          <div style={{ gridColumn: \"1 / -1\" }}>\r\n            <div className=\"pending-requests-card\">\r\n              <div className=\"section-header\">\r\n                <h2 style={{ margin: 0, color: 'black' }}>Pending Requests</h2>\r\n              </div>\r\n              {pendingRequests.length > 0 ? (\r\n                <ul className=\"pending-list\">\r\n                  {pendingRequests.map((request) => (\r\n                    <li key={request.requestId}>\r\n                      <div className=\"request-item\">\r\n                        <div className=\"request-details\">\r\n                          <div\r\n                            style={{ fontWeight: \"600\", marginBottom: \"4px\" }}\r\n                          >\r\n                            {request.eventName || \"New Event\"}\r\n                          </div>\r\n                          <div\r\n                            style={{ fontSize: \"0.875rem\", color: \"#6c757d\" }}\r\n                          >\r\n                            {request.eventDate\r\n                              ? formatDate(request.eventDate)\r\n                              : \"No Date\"}\r\n                            {\" • \"}\r\n                            {request.eventTime\r\n                              ? formatTime(request.eventTime)\r\n                              : \"No Time\"}\r\n                            {\" • \"}{request.plannerName || \"Planner\"}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"request-actions\">\r\n                          <button\r\n                            className=\"accept-btn\"\r\n                            onClick={() =>\r\n                              handleRequestResponse(\r\n                                request.requestId,\r\n                                \"accepted\"\r\n                              )\r\n                            }\r\n                          >\r\n                            Accept\r\n                          </button>\r\n                          <button\r\n                            className=\"reject-btn\"\r\n                            onClick={() =>\r\n                              handleRequestResponse(\r\n                                request.requestId,\r\n                                \"rejected\"\r\n                              )\r\n                            }\r\n                          >\r\n                            Reject\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              ) : (\r\n                <p\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    color: \"#6c757d\",\r\n                    margin: \"1.5rem 0\",\r\n                  }}\r\n                >\r\n                  No pending requests at the moment.\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Chat Section */}\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#f8f9fa\",\r\n              borderRadius: \"12px\",\r\n              padding: \"1.5rem\",\r\n              boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\r\n              gridColumn: \"1 / -1\",\r\n              marginTop: \"2rem\",\r\n            }}\r\n          >\r\n            <ChatUI\r\n              listTitle=\"Planners\"\r\n              vendors={conversations.map((conv) => ({\r\n                id: conv.conversation_id, // Use conversation_id instead of planner_id\r\n                name: conv.planner?.name || 'Unknown Planner',\r\n                lastMessage: conv.last_message_at ? 'Last message: ' + new Date(conv.last_message_at).toLocaleString() : 'No messages yet',\r\n                unread: 0, // You could calculate this from unread messages\r\n                plannerId: conv.planner_id, // Store the actual planner ID for selection\r\n                conversationId: conv.conversation_id, // Store the conversation ID\r\n              }))}\r\n              onSendMessage={handleSendMessage}\r\n              onSelectVendor={handleSelectPlanner}\r\n              selectedVendor={selectedPlanner}\r\n              messages={currentConversation ? chatMessages[currentConversation.conversation_id] || [] : []}\r\n              unreadCount={unreadCount}\r\n              showSearch={false}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Profile Picture Modal */}\r\n      {showImageModal && (\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            backgroundColor: \"rgba(0, 0, 0, 0.8)\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            zIndex: 1000,\r\n          }}\r\n          onClick={() => setShowImageModal(false)}\r\n        >\r\n          <div\r\n            style={{ maxWidth: \"90%\", maxHeight: \"90%\", position: \"relative\" }}\r\n          >\r\n            <button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                setShowImageModal(false);\r\n              }}\r\n              style={{\r\n                position: \"absolute\",\r\n                top: \"-40px\",\r\n                right: \"0\",\r\n                background: \"none\",\r\n                border: \"none\",\r\n                color: \"white\",\r\n                fontSize: \"24px\",\r\n                cursor: \"pointer\",\r\n                padding: \"8px\",\r\n                zIndex: 1001,\r\n              }}\r\n            >\r\n              ✕\r\n            </button>\r\n            {preview && (\r\n              <img\r\n                src={preview}\r\n                alt=\"Profile Preview\"\r\n                style={{\r\n                  maxWidth: \"100%\",\r\n                  maxHeight: \"80vh\",\r\n                  borderRadius: \"8px\",\r\n                  boxShadow: \"0 4px 20px rgba(0,0,0,0.3)\",\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}